{"version":3,"sources":["components/chat/MessageDiv.js","components/chat/MessageSec.js","components/chat/UserSec.js","views/messaging/messaging.js","components/common/Loading.js","redux/actions/dashboardActions.js","services/panel/index.js"],"names":["MessageDiv","userId","message","userProfile","otherProfile","state","author","body","type","messageOwn","MessageText","className","src","MessageMedia","media","getMediaContent","a","getContentTemporaryUrl","mediaLink","window","open","onClick","style","textAlign","fontFamily","filename","renderMessageOnType","React","memo","MessageSec","active","back","client","useState","messages","setMessages","messageText","setMessageText","event","Event","channelRef","useRef","typing","setTyping","fileMessage","setFileMessage","room","_id","messageEndRef","user","useSelector","auth","currentUserProfile","image","url","profileImageURL","defalutProfile","otherUserProfile","joinChannel","chatClient","Promise","resolve","reject","getSubscribedChannels","then","getChannelByUniqueName","channel","current","join","getMessages","previousMessages","items","scrollToBottom","addEventListener","leave","error","console","log","catch","createNewChannel","createChannel","uniqueName","friendlyName","configureChannelEvents","on","prev","handleMessageAdded","useEffect","dispatchEvent","doc","document","getElementById","scrollIntoView","onMessageSend","e","preventDefault","formData","FormData","append","sendMessage","AxiosBase","put","new","ArrowBack","height","padding","name","patCondition","width","alt","map","item","id","ref","onChange","target","files","onKeyUp","key","value","placeholder","IconButton","Close","UserSec","data","onCallback","index","UserItem","New","includes","TwilioChat","require","MessagingPage","token","setActive","userData","setUserData","cloneData","setCloneData","query","setQuery","loading","setLoading","setUsername","dispatch","useDispatch","setHeaderTitle","createChatClient","getChatToken","identity","Client","create","getChatRooms","headers","API","get","conversations","length","updatededChatRoom","filter","el","updateChatRoom","onSearchChange","queryV","filterData","suggestion","toLowerCase","indexOf","RenderSearch","autoFocus","Loading","v","title","SET_HEADER_TITLE","payload","getNewNotification","getNotification","markSeenAllNotification","delete","getDocProfile","getPatProfile","updateSlot","resData","physicalTimeSlot","slots","videoTimeSlot","getAppointments","count","queryKey","getConsulations","response","getPaymentHistory"],"mappings":"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","file":"static/js/36.81ca2d21.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst MessageDiv = ({ userId, message, userProfile, otherProfile }) => {\r\n  const { author, body, type } = message?.state;\r\n  const messageOwn = author === userId;\r\n\r\n  const renderMessageOnType = () => {\r\n    switch (type) {\r\n      case \"text\":\r\n        return <MessageText />;\r\n      case \"media\":\r\n        return <MessageMedia />;\r\n\r\n      default:\r\n        return <MessageText />;\r\n    }\r\n  };\r\n\r\n  const MessageText = () => {\r\n    return (\r\n      <div className={messageOwn ? \"messageDiv myMessage\" : \"messageDiv \"}>\r\n        <img\r\n          src={messageOwn ? userProfile : otherProfile}\r\n          className=\"msgImg\"\r\n        ></img>\r\n        <div className=\"messageText\">{body}</div>\r\n      </div>\r\n    );\r\n  };\r\n  const MessageMedia = () => {\r\n    const { media } = message.state;\r\n\r\n    const getMediaContent = async () => {\r\n      const mediaLink = await media.getContentTemporaryUrl();\r\n      window.open(mediaLink);\r\n    };\r\n    return (\r\n      <div className={messageOwn ? \"messageDiv myMessage\" : \"messageDiv \"}>\r\n        <img\r\n          src={messageOwn ? userProfile : otherProfile}\r\n          className=\"msgImg\"\r\n        ></img>\r\n        <div\r\n          onClick={getMediaContent}\r\n          className=\"messageText  pointer\"\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          click to open file :{\" \"}\r\n          <span style={{ fontFamily: \"poppinsSb\" }}>\r\n            {media.state.filename}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return renderMessageOnType();\r\n};\r\n\r\nexport default React.memo(MessageDiv);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport { profileImageURL } from \"../../helpers/helpers\";\r\nimport { defalutProfile } from \"../../assets\";\r\nimport MessageDiv from \"./MessageDiv\";\r\nimport AxiosBase from \"../../config/AxiosBase\";\r\n\r\nexport default function MessageSec({ active, back, client }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const event = new Event(\"unMount\");\r\n  const channelRef = useRef(null);\r\n  const [typing, setTyping] = useState(false);\r\n  const [fileMessage, setFileMessage] = useState(null);\r\n\r\n  const room = active?._id;\r\n  const messageEndRef = useRef();\r\n  // getting user\r\n  const { user } = useSelector((state) => state.auth);\r\n  const userId = user?._id;\r\n  const currentUserProfile =\r\n    (user?.image?.url !== \"None\" && profileImageURL + user?.image?.url) ||\r\n    defalutProfile;\r\n\r\n  const otherUserProfile =\r\n    (active?.image?.url !== \"None\" && profileImageURL + active?.image?.url) ||\r\n    defalutProfile;\r\n\r\n  // create channle  if not or join\r\n  const joinChannel = async (chatClient) => {\r\n    return new Promise((resolve, reject) => {\r\n      chatClient\r\n        .getSubscribedChannels()\r\n        .then(() => {\r\n          chatClient\r\n            .getChannelByUniqueName(room)\r\n            .then(async (channel) => {\r\n              channelRef.current = channel;\r\n\r\n              channel\r\n                .join()\r\n                .then(async () => {\r\n                  const previousMessages = await channel.getMessages();\r\n\r\n                  setMessages(previousMessages?.items);\r\n                  scrollToBottom();\r\n\r\n                  window.addEventListener(\"beforeunload\", () =>\r\n                    channel.leave()\r\n                  );\r\n                  window.addEventListener(\r\n                    \"unMount\",\r\n                    () => {\r\n                      try {\r\n                        channel.leave();\r\n                      } catch (error) {\r\n                        console.log(error);\r\n                      }\r\n                    },\r\n                    false\r\n                  );\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error);\r\n                  console.log(\"Could not join channel.\");\r\n                });\r\n              resolve(channel);\r\n            })\r\n            .catch(() => createNewChannel(chatClient));\r\n        })\r\n        .catch(() => console.log(\"Could not get channel list.\"));\r\n    });\r\n  };\r\n\r\n  // join channel\r\n  const createNewChannel = async (chatClient) => {\r\n    return new Promise((resolve, reject) => {\r\n      chatClient\r\n        .createChannel({ uniqueName: room, friendlyName: room })\r\n        .then(() => joinChannel(chatClient))\r\n        .then(configureChannelEvents)\r\n        .catch(() => console.log(\"Could not create new channel\"));\r\n    });\r\n  };\r\n\r\n  const handleMessageAdded = (message) => {\r\n    setMessages((prev) => [...prev, message]);\r\n    scrollToBottom();\r\n  };\r\n\r\n  const configureChannelEvents = (channel) => {\r\n    channel.on(\"messageAdded\", (message) => {\r\n      handleMessageAdded(message);\r\n    });\r\n    // Listen for members typing\r\n    channel.on(\"typingStarted\", function () {\r\n      setTyping(true);\r\n      scrollToBottom();\r\n    });\r\n    // Listen for members typing\r\n    channel.on(\"typingEnded\", function () {\r\n      setTyping(false);\r\n    });\r\n  };\r\n\r\n  // initiallize\r\n  useEffect(() => {\r\n    if (client) {\r\n      joinChannel(client)\r\n        .then(configureChannelEvents)\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n\r\n      return () => {\r\n        channelRef.current?.leave();\r\n        window.dispatchEvent(event);\r\n        setMessages([]);\r\n      };\r\n    }\r\n  }, [active, client]);\r\n\r\n  // scroll to bottom\r\n  const scrollToBottom = () => {\r\n    const doc = document.getElementById(\"messageEndRef\");\r\n    messageEndRef\r\n      ? messageEndRef.current?.scrollIntoView()\r\n      : doc?.scrollIntoView();\r\n  };\r\n\r\n  // send a message to convo\r\n  const onMessageSend = async (e) => {\r\n    e.preventDefault();\r\n    if (!messageText && !fileMessage) return;\r\n    const formData = new FormData();\r\n    if (fileMessage !== null) {\r\n      formData.append(\"file\", fileMessage);\r\n    }\r\n    try {\r\n      if (channelRef.current) {\r\n        channelRef.current.sendMessage(\r\n          fileMessage !== null ? formData : messageText\r\n        );\r\n        await AxiosBase.put(`/chat/chat-room/${room}`, { new: [userId] });\r\n      }\r\n      setMessageText(\"\");\r\n      setFileMessage(null);\r\n      scrollToBottom();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // main return\r\n  return (\r\n    <>\r\n      <div className=\"messageSec\">\r\n        <div className=\"flexBetweenCenter header\">\r\n          <div className=\"flexCenter\">\r\n            <ArrowBack onClick={back} className=\"d-md-none pointer\" />\r\n            <div className=\"userItem\" style={{ height: \"100%\", padding: \"0\" }}>\r\n              <img src={otherUserProfile} className=\"profileImg\"></img>\r\n              <div>\r\n                <div className=\"name\">{active?.name}</div>\r\n                <div className=\"text textBlue\">{active?.patCondition}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"moreIconDiv\">\r\n            <img\r\n              src=\"/images/moreIcon.png\"\r\n              className=\"moreIcon pointer\"\r\n              style={{ width: \"4px\" }}\r\n              alt=\"Icon \"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n        <div className=\"innerMessageSec\">\r\n          {messages?.map((item) => {\r\n            return (\r\n              <MessageDiv\r\n                message={item}\r\n                userId={userId}\r\n                userProfile={currentUserProfile}\r\n                otherProfile={otherUserProfile}\r\n                key={item?._id}\r\n              />\r\n            );\r\n          })}\r\n          {typing && (\r\n            <div className=\"messageDiv\">\r\n              <img src={otherUserProfile} className=\"msgImg\"></img>\r\n              <div className=\"messageText\" style={{ width: \"fit-content\" }}>\r\n                Typing ...\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div id=\"messageEndRef\" ref={messageEndRef}></div>\r\n        </div>\r\n        <div className=\"bottomSec\">\r\n          <div className=\"sendDiv\">\r\n            <div className=\"choose_file\">\r\n              <div className=\"attachmentDiv\">\r\n                <img\r\n                  className=\"attachmentIcon pointer\"\r\n                  src=\"/images/attach.svg\"\r\n                  style={{ width: \"100%\" }}\r\n                  alt=\"icon\"\r\n                ></img>\r\n              </div>\r\n              <input\r\n                onChange={(e) => setFileMessage(e.target.files[0])}\r\n                type=\"file\"\r\n                onKeyUp={(e) => e.key === \"Enter\" && onMessageSend(e)}\r\n              />\r\n            </div>\r\n            {fileMessage === null ? (\r\n              <input\r\n                onChange={(e) => {\r\n                  setMessageText(e.target.value);\r\n                  channelRef.current.typing();\r\n                }}\r\n                value={messageText}\r\n                className=\"sendInput\"\r\n                placeholder=\"Type your question here…\"\r\n                onKeyUp={(e) => e.key === \"Enter\" && onMessageSend(e)}\r\n              ></input>\r\n            ) : (\r\n              <div className=\"fileInputDiv\">\r\n                <span> {fileMessage?.name}</span>\r\n                <IconButton onClick={() => setFileMessage(null)}>\r\n                  <Close></Close>\r\n                </IconButton>\r\n              </div>\r\n            )}\r\n            <div onClick={onMessageSend} className=\"sendIconDiv\">\r\n              <img\r\n                className=\"sendIcon pointer\"\r\n                src=\"/images/send.svg\"\r\n                style={{ width: \"100%\" }}\r\n                alt=\"icon\"\r\n              ></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { profileImageURL } from \"../../helpers/helpers\";\r\nimport { defalutProfile } from \"../../assets\";\r\n\r\nexport default function UserSec({ data, active, onCallback, userId }) {\r\n  // main return\r\n  return (\r\n    <>\r\n      {data.map((item, index) => {\r\n        return (\r\n          <UserItem\r\n            {...item}\r\n            active={active}\r\n            userId={userId}\r\n            onCallback={onCallback}\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst UserItem = ({\r\n  new: New,\r\n  name,\r\n  patCondition,\r\n  image,\r\n  _id,\r\n  active,\r\n  onCallback,\r\n  userId,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={() => onCallback({ name, patCondition, image, _id })}\r\n      className={_id === active?._id ? \"userItem userItemActive\" : \"userItem\"}\r\n    >\r\n      {New?.includes(userId) === true || <div className=\"new\"></div>}\r\n      <img\r\n        src={\r\n          (image?.url !== \"None\" && profileImageURL + image?.url) ||\r\n          defalutProfile\r\n        }\r\n        className=\"profileImg\"\r\n      ></img>\r\n      <div>\r\n        <div className=\"name\">{name}</div>\r\n        <div className=\"text textBlue\">{patCondition}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport MessageSec from \"../../components/chat/MessageSec\";\r\nimport UserSec from \"../../components/chat/UserSec\";\r\nimport { headers } from \"../../helpers/helpers\";\r\nimport API from \"../../config/AxiosBase\";\r\nimport Loading from \"../../components/common/Loading\";\r\nimport { getChatToken } from \"../../services/panel\";\r\nimport \"./message.css\";\r\nimport { setHeaderTitle } from \"../../redux/actions/dashboardActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AxiosBase from \"../../config/AxiosBase\";\r\nconst TwilioChat = require(\"twilio-chat\");\r\n\r\nexport default function MessagingPage() {\r\n  // data states\r\n  const [active, setActive] = useState(null);\r\n  const [userData, setUserData] = useState([]);\r\n  const [cloneData, setCloneData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  // client ref\r\n  const client = useRef(null);\r\n  // helping states\r\n  const [loading, setLoading] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  // one-time executes to fetch data\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const userId = user?._id;\r\n\r\n  // setting Header title\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(setHeaderTitle(\"Messaging\"));\r\n    return () => {};\r\n  }, []);\r\n\r\n  let token;\r\n\r\n  const createChatClient = async () => {\r\n    token = await getChatToken();\r\n    setUsername(token.identity);\r\n    client.current = await TwilioChat.Client.create(token.token);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getting chat rooms\r\n    const getChatRooms = async () => {\r\n      setLoading(true);\r\n      try {\r\n        headers();\r\n        const conversations = await API.get(\"/chat/get-chat-rooms\");\r\n        setUserData(conversations.data);\r\n        setCloneData(conversations.data);\r\n        conversations.data.length > 0 && setActive(conversations?.data[0]);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    // calling functions\r\n    createChatClient();\r\n    getChatRooms();\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      if (!active.new?.includes(userId)) {\r\n        const updatededChatRoom = userData.filter((el) => {\r\n          if (el._id === active._id) {\r\n            el.new = [...el?.new, userId];\r\n          }\r\n          return el;\r\n        });\r\n        setUserData(updatededChatRoom);\r\n        const updateChatRoom = async () => {\r\n          try {\r\n            await AxiosBase.put(`/chat/chat-room/${active?._id}`, {\r\n              new: [...active.new, userId],\r\n            });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        };\r\n        updateChatRoom();\r\n      }\r\n    }\r\n    return () => {};\r\n  }, [active]);\r\n\r\n  // on Search\r\n  const onSearchChange = (e) => {\r\n    const queryV = e.target.value;\r\n    setQuery(queryV);\r\n    const filterData = cloneData.filter(\r\n      (suggestion) =>\r\n        suggestion.name.toLowerCase().indexOf(queryV.toLowerCase()) > -1\r\n    );\r\n    setUserData(filterData);\r\n  };\r\n\r\n  const RenderSearch = () => {\r\n    return (\r\n      <div className=\"searchBar\">\r\n        <input\r\n          onChange={onSearchChange}\r\n          placeholder=\"Seacrh\"\r\n          className=\"search\"\r\n          value={query}\r\n          autoFocus={query !== \"\"}\r\n        ></input>\r\n        <div className=\"searchIconDiv\">\r\n          <img\r\n            className=\"searchIcon w-100\"\r\n            src=\"/images/searchIcon.png\"\r\n            alt=\"search\"\r\n          ></img>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // main return\r\n  return (\r\n    <div className=\"contentRow py-3\">\r\n      <div className=\"secDiv p-0 message\">\r\n        {loading && <Loading />}\r\n        {loading || (\r\n          <div className=\"mainFlex\">\r\n            <div className=\"userSec d-none d-md-block\">\r\n              <RenderSearch />\r\n\r\n              <div className=\"overFlowAuto\">\r\n                <UserSec\r\n                  userId={userId}\r\n                  data={userData}\r\n                  active={active}\r\n                  onCallback={(v) => setActive(v)}\r\n                />\r\n              </div>\r\n            </div>\r\n            {active !== null || (\r\n              <div className=\"userSec d-md-none\">\r\n                <RenderSearch />\r\n                <div className=\"overFlowAuto\">\r\n                  <UserSec\r\n                    userId={userId}\r\n                    data={userData}\r\n                    active={active}\r\n                    onCallback={(v) => setActive(v)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            {active !== null && (\r\n              <MessageSec\r\n                client={client.current}\r\n                active={active}\r\n                back={() => setActive(null)}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoadingComponent from \"@material-ui/core/CircularProgress\";\r\nexport default function Loading({ height = \"80vh\" }) {\r\n  return (\r\n    <div className=\"centerFlex\" style={{ height: height, width: \"100%\" }}>\r\n      <LoadingComponent />\r\n    </div>\r\n  );\r\n}\r\n","import { SET_HEADER_TITLE } from \"../constants/dashboardConstant\";\r\n\r\nexport const setHeaderTitle = (title) => {\r\n  return {\r\n    type: SET_HEADER_TITLE,\r\n    payload: title,\r\n  };\r\n};\r\n","import API from \"../../config/AxiosBase\";\r\nimport { headers } from \"../../helpers/helpers\";\r\n\r\n// notification\r\nexport const getNewNotification = () => {\r\n  headers();\r\n  return API.get(`/notification/?seen=true`);\r\n};\r\nexport const getNotification = () => {\r\n  headers();\r\n  return API.get(`/notification/`);\r\n};\r\nexport const markSeenAllNotification = () => {\r\n  headers();\r\n  return API.delete(`/notification/`);\r\n};\r\n// dashboard counts\r\nexport const getDashboardCounts = () => {\r\n  headers();\r\n  return API.get(`/auth/dashboard-counts`);\r\n};\r\n\r\n// profile\r\nexport const getDocProfile = () => {\r\n  headers();\r\n  return API.get(`/docprofile`);\r\n};\r\nexport const getPatProfile = () => {\r\n  headers();\r\n  return API.get(`/patprofile`);\r\n};\r\nexport const updateSlot = (data) => {\r\n  let resData =\r\n    data?.type === \"physical\"\r\n      ? { physicalTimeSlot: data.slots }\r\n      : { videoTimeSlot: data.slots };\r\n\r\n  headers();\r\n  return API.put(`/docprofile/update-event`, resData);\r\n};\r\n\r\n// Appointments\r\nexport const getAppointments = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/booking/?visitType=physical&&count=${count}`);\r\n};\r\n// consulation\r\nexport const getConsulations = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/booking/?visitType=video&&count=${count}`);\r\n};\r\n\r\n// chat\r\nexport const getChatToken = async () => {\r\n  headers();\r\n  const response = await API.get(\"/chat/token\");\r\n  const { data } = response;\r\n  return data;\r\n};\r\n\r\n// payment history\r\nexport const getPaymentHistory = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/patprofile/get-payments?count=${count}`);\r\n};\r\n"],"sourceRoot":""}