{"version":3,"sources":["components/chat/MessageDiv.js","components/chat/MessageSec.js","components/chat/UserSec.js","views/messaging/messaging.js","components/common/Loading.js","redux/actions/dashboardActions.js","services/panel/index.js"],"names":["MessageDiv","_ref","userId","message","userProfile","otherProfile","_message$state","state","author","body","type","messageOwn","MessageText","_jsxs","className","children","_jsx","src","MessageMedia","media","getMediaContent","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","mediaLink","wrap","_context","prev","next","getContentTemporaryUrl","sent","window","open","stop","apply","arguments","onClick","style","textAlign","fontFamily","filename","renderMessageOnType","React","memo","MessageSec","_user$image","_user$image2","_active$image","_active$image2","active","back","client","_useState","useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","messageText","setMessageText","event","Event","channelRef","useRef","_useState5","_useState6","typing","setTyping","_useState7","_useState8","fileMessage","setFileMessage","room","_id","messageEndRef","user","useSelector","auth","currentUserProfile","image","url","profileImageURL","defalutProfile","otherUserProfile","joinChannel","_callee3","chatClient","_context3","abrupt","Promise","resolve","reject","getSubscribedChannels","then","getChannelByUniqueName","_ref3","_callee2","channel","_context2","current","join","previousMessages","getMessages","items","scrollToBottom","addEventListener","leave","error","console","log","catch","_x2","createNewChannel","_x","_ref5","_callee4","_context4","createChannel","uniqueName","friendlyName","configureChannelEvents","_x3","on","concat","_toConsumableArray","handleMessageAdded","useEffect","_channelRef$current","dispatchEvent","_messageEndRef$curren","doc","document","getElementById","scrollIntoView","onMessageSend","_ref6","_callee5","e","formData","_context5","preventDefault","FormData","append","sendMessage","AxiosBase","put","new","t0","_x4","_Fragment","ArrowBack","height","padding","name","patCondition","width","alt","map","item","id","ref","onChange","target","files","onKeyUp","key","value","placeholder","IconButton","Close","UserSec","data","onCallback","index","_createElement","UserItem","_objectSpread","New","includes","TwilioChat","require","MessagingPage","token","setActive","userData","setUserData","cloneData","setCloneData","query","setQuery","_useState9","_useState10","loading","setLoading","_useState11","_useState12","setUsername","dispatch","useDispatch","setHeaderTitle","createChatClient","getChatToken","identity","Client","create","getChatRooms","conversations","headers","API","get","length","_active$new","updatededChatRoom","filter","el","updateChatRoom","onSearchChange","queryV","filterData","suggestion","toLowerCase","indexOf","RenderSearch","autoFocus","Loading","v","_ref$height","LoadingComponent","title","SET_HEADER_TITLE","payload","getNewNotification","getNotification","markSeenAllNotification","delete","getDocProfile","getPatProfile","updateSlot","resData","physicalTimeSlot","slots","videoTimeSlot","getAppointments","count","queryKey","getConsulations","response","getPaymentHistory","_ref4"],"mappings":"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","file":"static/js/36.89059536.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MessageDiv = ({ userId, message, userProfile, otherProfile }) => {\n  const { author, body, type } = message?.state;\n  const messageOwn = author === userId;\n\n  const renderMessageOnType = () => {\n    switch (type) {\n      case \"text\":\n        return <MessageText />;\n      case \"media\":\n        return <MessageMedia />;\n\n      default:\n        return <MessageText />;\n    }\n  };\n\n  const MessageText = () => {\n    return (\n      <div className={messageOwn ? \"messageDiv myMessage\" : \"messageDiv \"}>\n        <img\n          src={messageOwn ? userProfile : otherProfile}\n          className=\"msgImg\"\n        ></img>\n        <div className=\"messageText\">{body}</div>\n      </div>\n    );\n  };\n  const MessageMedia = () => {\n    const { media } = message.state;\n\n    const getMediaContent = async () => {\n      const mediaLink = await media.getContentTemporaryUrl();\n      window.open(mediaLink);\n    };\n    return (\n      <div className={messageOwn ? \"messageDiv myMessage\" : \"messageDiv \"}>\n        <img\n          src={messageOwn ? userProfile : otherProfile}\n          className=\"msgImg\"\n        ></img>\n        <div\n          onClick={getMediaContent}\n          className=\"messageText  pointer\"\n          style={{ textAlign: \"center\" }}\n        >\n          click to open file :{\" \"}\n          <span style={{ fontFamily: \"poppinsSb\" }}>\n            {media.state.filename}\n          </span>\n        </div>\n      </div>\n    );\n  };\n  return renderMessageOnType();\n};\n\nexport default React.memo(MessageDiv);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport { useSelector } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { profileImageURL } from \"../../helpers/helpers\";\nimport { defalutProfile } from \"../../assets\";\nimport MessageDiv from \"./MessageDiv\";\nimport AxiosBase from \"../../config/AxiosBase\";\n\nexport default function MessageSec({ active, back, client }) {\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState(\"\");\n  const event = new Event(\"unMount\");\n  const channelRef = useRef(null);\n  const [typing, setTyping] = useState(false);\n  const [fileMessage, setFileMessage] = useState(null);\n\n  const room = active?._id;\n  const messageEndRef = useRef();\n  // getting user\n  const { user } = useSelector((state) => state.auth);\n  const userId = user?._id;\n  const currentUserProfile =\n    (user?.image?.url !== \"None\" && profileImageURL + user?.image?.url) ||\n    defalutProfile;\n\n  const otherUserProfile =\n    (active?.image?.url !== \"None\" && profileImageURL + active?.image?.url) ||\n    defalutProfile;\n\n  // create channle  if not or join\n  const joinChannel = async (chatClient) => {\n    return new Promise((resolve, reject) => {\n      chatClient\n        .getSubscribedChannels()\n        .then(() => {\n          chatClient\n            .getChannelByUniqueName(room)\n            .then(async (channel) => {\n              channelRef.current = channel;\n\n              channel\n                .join()\n                .then(async () => {\n                  const previousMessages = await channel.getMessages();\n\n                  setMessages(previousMessages?.items);\n                  scrollToBottom();\n\n                  window.addEventListener(\"beforeunload\", () =>\n                    channel.leave()\n                  );\n                  window.addEventListener(\n                    \"unMount\",\n                    () => {\n                      try {\n                        channel.leave();\n                      } catch (error) {\n                        console.log(error);\n                      }\n                    },\n                    false\n                  );\n                })\n                .catch((error) => {\n                  console.log(error);\n                  console.log(\"Could not join channel.\");\n                });\n              resolve(channel);\n            })\n            .catch(() => createNewChannel(chatClient));\n        })\n        .catch(() => console.log(\"Could not get channel list.\"));\n    });\n  };\n\n  // join channel\n  const createNewChannel = async (chatClient) => {\n    return new Promise((resolve, reject) => {\n      chatClient\n        .createChannel({ uniqueName: room, friendlyName: room })\n        .then(() => joinChannel(chatClient))\n        .then(configureChannelEvents)\n        .catch(() => console.log(\"Could not create new channel\"));\n    });\n  };\n\n  const handleMessageAdded = (message) => {\n    setMessages((prev) => [...prev, message]);\n    scrollToBottom();\n  };\n\n  const configureChannelEvents = (channel) => {\n    channel.on(\"messageAdded\", (message) => {\n      handleMessageAdded(message);\n    });\n    // Listen for members typing\n    channel.on(\"typingStarted\", function () {\n      setTyping(true);\n      scrollToBottom();\n    });\n    // Listen for members typing\n    channel.on(\"typingEnded\", function () {\n      setTyping(false);\n    });\n  };\n\n  // initiallize\n  useEffect(() => {\n    if (client) {\n      joinChannel(client)\n        .then(configureChannelEvents)\n        .catch((error) => {\n          console.log(error.message);\n        });\n\n      return () => {\n        channelRef.current?.leave();\n        window.dispatchEvent(event);\n        setMessages([]);\n      };\n    }\n  }, [active, client]);\n\n  // scroll to bottom\n  const scrollToBottom = () => {\n    const doc = document.getElementById(\"messageEndRef\");\n    messageEndRef\n      ? messageEndRef.current?.scrollIntoView()\n      : doc?.scrollIntoView();\n  };\n\n  // send a message to convo\n  const onMessageSend = async (e) => {\n    e.preventDefault();\n    if (!messageText && !fileMessage) return;\n    const formData = new FormData();\n    if (fileMessage !== null) {\n      formData.append(\"file\", fileMessage);\n    }\n    try {\n      if (channelRef.current) {\n        channelRef.current.sendMessage(\n          fileMessage !== null ? formData : messageText\n        );\n        await AxiosBase.put(`/chat/chat-room/${room}`, { new: [userId] });\n      }\n      setMessageText(\"\");\n      setFileMessage(null);\n      scrollToBottom();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // main return\n  return (\n    <>\n      <div className=\"messageSec\">\n        <div className=\"flexBetweenCenter header\">\n          <div className=\"flexCenter\">\n            <ArrowBack onClick={back} className=\"d-md-none pointer\" />\n            <div className=\"userItem\" style={{ height: \"100%\", padding: \"0\" }}>\n              <img src={otherUserProfile} className=\"profileImg\"></img>\n              <div>\n                <div className=\"name\">{active?.name}</div>\n                <div className=\"text textBlue\">{active?.patCondition}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"moreIconDiv\">\n            <img\n              src=\"/images/moreIcon.png\"\n              className=\"moreIcon pointer\"\n              style={{ width: \"4px\" }}\n              alt=\"Icon \"\n            ></img>\n          </div>\n        </div>\n        <div className=\"innerMessageSec\">\n          {messages?.map((item) => {\n            return (\n              <MessageDiv\n                message={item}\n                userId={userId}\n                userProfile={currentUserProfile}\n                otherProfile={otherUserProfile}\n                key={item?._id}\n              />\n            );\n          })}\n          {typing && (\n            <div className=\"messageDiv\">\n              <img src={otherUserProfile} className=\"msgImg\"></img>\n              <div className=\"messageText\" style={{ width: \"fit-content\" }}>\n                Typing ...\n              </div>\n            </div>\n          )}\n          <div id=\"messageEndRef\" ref={messageEndRef}></div>\n        </div>\n        <div className=\"bottomSec\">\n          <div className=\"sendDiv\">\n            <div className=\"choose_file\">\n              <div className=\"attachmentDiv\">\n                <img\n                  className=\"attachmentIcon pointer\"\n                  src=\"/images/attach.svg\"\n                  style={{ width: \"100%\" }}\n                  alt=\"icon\"\n                ></img>\n              </div>\n              <input\n                onChange={(e) => setFileMessage(e.target.files[0])}\n                type=\"file\"\n                onKeyUp={(e) => e.key === \"Enter\" && onMessageSend(e)}\n              />\n            </div>\n            {fileMessage === null ? (\n              <input\n                onChange={(e) => {\n                  setMessageText(e.target.value);\n                  channelRef.current.typing();\n                }}\n                value={messageText}\n                className=\"sendInput\"\n                placeholder=\"Type your question here…\"\n                onKeyUp={(e) => e.key === \"Enter\" && onMessageSend(e)}\n              ></input>\n            ) : (\n              <div className=\"fileInputDiv\">\n                <span> {fileMessage?.name}</span>\n                <IconButton onClick={() => setFileMessage(null)}>\n                  <Close></Close>\n                </IconButton>\n              </div>\n            )}\n            <div onClick={onMessageSend} className=\"sendIconDiv\">\n              <img\n                className=\"sendIcon pointer\"\n                src=\"/images/send.svg\"\n                style={{ width: \"100%\" }}\n                alt=\"icon\"\n              ></img>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { profileImageURL } from \"../../helpers/helpers\";\nimport { defalutProfile } from \"../../assets\";\n\nexport default function UserSec({ data, active, onCallback, userId }) {\n  // main return\n  return (\n    <>\n      {data.map((item, index) => {\n        return (\n          <UserItem\n            {...item}\n            active={active}\n            userId={userId}\n            onCallback={onCallback}\n            key={index}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nconst UserItem = ({\n  new: New,\n  name,\n  patCondition,\n  image,\n  _id,\n  active,\n  onCallback,\n  userId,\n}) => {\n  return (\n    <div\n      onClick={() => onCallback({ name, patCondition, image, _id })}\n      className={_id === active?._id ? \"userItem userItemActive\" : \"userItem\"}\n    >\n      {New?.includes(userId) === true || <div className=\"new\"></div>}\n      <img\n        src={\n          (image?.url !== \"None\" && profileImageURL + image?.url) ||\n          defalutProfile\n        }\n        className=\"profileImg\"\n      ></img>\n      <div>\n        <div className=\"name\">{name}</div>\n        <div className=\"text textBlue\">{patCondition}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MessageSec from \"../../components/chat/MessageSec\";\nimport UserSec from \"../../components/chat/UserSec\";\nimport { headers } from \"../../helpers/helpers\";\nimport API from \"../../config/AxiosBase\";\nimport Loading from \"../../components/common/Loading\";\nimport { getChatToken } from \"../../services/panel\";\nimport \"./message.css\";\nimport { setHeaderTitle } from \"../../redux/actions/dashboardActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AxiosBase from \"../../config/AxiosBase\";\nconst TwilioChat = require(\"twilio-chat\");\n\nexport default function MessagingPage() {\n  // data states\n  const [active, setActive] = useState(null);\n  const [userData, setUserData] = useState([]);\n  const [cloneData, setCloneData] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  // client ref\n  const client = useRef(null);\n  // helping states\n  const [loading, setLoading] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  // one-time executes to fetch data\n\n  const { user } = useSelector((state) => state.auth);\n  const userId = user?._id;\n\n  // setting Header title\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setHeaderTitle(\"Messaging\"));\n    return () => {};\n  }, []);\n\n  let token;\n\n  const createChatClient = async () => {\n    token = await getChatToken();\n    setUsername(token.identity);\n    client.current = await TwilioChat.Client.create(token.token);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    // getting chat rooms\n    const getChatRooms = async () => {\n      setLoading(true);\n      try {\n        headers();\n        const conversations = await API.get(\"/chat/get-chat-rooms\");\n        setUserData(conversations.data);\n        setCloneData(conversations.data);\n        conversations.data.length > 0 && setActive(conversations?.data[0]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    // calling functions\n    createChatClient();\n    getChatRooms();\n\n    return () => {};\n  }, []);\n\n  useEffect(() => {\n    if (active) {\n      if (!active.new?.includes(userId)) {\n        const updatededChatRoom = userData.filter((el) => {\n          if (el._id === active._id) {\n            el.new = [...el?.new, userId];\n          }\n          return el;\n        });\n        setUserData(updatededChatRoom);\n        const updateChatRoom = async () => {\n          try {\n            await AxiosBase.put(`/chat/chat-room/${active?._id}`, {\n              new: [...active.new, userId],\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        };\n        updateChatRoom();\n      }\n    }\n    return () => {};\n  }, [active]);\n\n  // on Search\n  const onSearchChange = (e) => {\n    const queryV = e.target.value;\n    setQuery(queryV);\n    const filterData = cloneData.filter(\n      (suggestion) =>\n        suggestion.name.toLowerCase().indexOf(queryV.toLowerCase()) > -1\n    );\n    setUserData(filterData);\n  };\n\n  const RenderSearch = () => {\n    return (\n      <div className=\"searchBar\">\n        <input\n          onChange={onSearchChange}\n          placeholder=\"Seacrh\"\n          className=\"search\"\n          value={query}\n          autoFocus={query !== \"\"}\n        ></input>\n        <div className=\"searchIconDiv\">\n          <img\n            className=\"searchIcon w-100\"\n            src=\"/images/searchIcon.png\"\n            alt=\"search\"\n          ></img>\n        </div>\n      </div>\n    );\n  };\n\n  // main return\n  return (\n    <div className=\"contentRow py-3\">\n      <div className=\"secDiv p-0 message\">\n        {loading && <Loading />}\n        {loading || (\n          <div className=\"mainFlex\">\n            <div className=\"userSec d-none d-md-block\">\n              <RenderSearch />\n\n              <div className=\"overFlowAuto\">\n                <UserSec\n                  userId={userId}\n                  data={userData}\n                  active={active}\n                  onCallback={(v) => setActive(v)}\n                />\n              </div>\n            </div>\n            {active !== null || (\n              <div className=\"userSec d-md-none\">\n                <RenderSearch />\n                <div className=\"overFlowAuto\">\n                  <UserSec\n                    userId={userId}\n                    data={userData}\n                    active={active}\n                    onCallback={(v) => setActive(v)}\n                  />\n                </div>\n              </div>\n            )}\n            {active !== null && (\n              <MessageSec\n                client={client.current}\n                active={active}\n                back={() => setActive(null)}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport LoadingComponent from \"@material-ui/core/CircularProgress\";\nexport default function Loading({ height = \"80vh\" }) {\n  return (\n    <div className=\"centerFlex\" style={{ height: height, width: \"100%\" }}>\n      <LoadingComponent />\n    </div>\n  );\n}\n","import { SET_HEADER_TITLE } from \"../constants/dashboardConstant\";\n\nexport const setHeaderTitle = (title) => {\n  return {\n    type: SET_HEADER_TITLE,\n    payload: title,\n  };\n};\n","import API from \"../../config/AxiosBase\";\nimport { headers } from \"../../helpers/helpers\";\n\n// notification\nexport const getNewNotification = () => {\n  headers();\n  return API.get(`/notification/?seen=true`);\n};\nexport const getNotification = () => {\n  headers();\n  return API.get(`/notification/`);\n};\nexport const markSeenAllNotification = () => {\n  headers();\n  return API.delete(`/notification/`);\n};\n// dashboard counts\nexport const getDashboardCounts = () => {\n  headers();\n  return API.get(`/auth/dashboard-counts`);\n};\n\n// profile\nexport const getDocProfile = () => {\n  headers();\n  return API.get(`/docprofile`);\n};\nexport const getPatProfile = () => {\n  headers();\n  return API.get(`/patprofile`);\n};\nexport const updateSlot = (data) => {\n  let resData =\n    data?.type === \"physical\"\n      ? { physicalTimeSlot: data.slots }\n      : { videoTimeSlot: data.slots };\n\n  headers();\n  return API.put(`/docprofile/update-event`, resData);\n};\n\n// Appointments\nexport const getAppointments = ({ queryKey }) => {\n  const count = queryKey[1];\n  headers();\n  return API.get(`/booking/?visitType=physical&&count=${count}`);\n};\n// consulation\nexport const getConsulations = ({ queryKey }) => {\n  const count = queryKey[1];\n  headers();\n  return API.get(`/booking/?visitType=video&&count=${count}`);\n};\n\n// chat\nexport const getChatToken = async () => {\n  headers();\n  const response = await API.get(\"/chat/token\");\n  const { data } = response;\n  return data;\n};\n\n// payment history\nexport const getPaymentHistory = ({ queryKey }) => {\n  const count = queryKey[1];\n  headers();\n  return API.get(`/patprofile/get-payments?count=${count}`);\n};\n"],"sourceRoot":""}