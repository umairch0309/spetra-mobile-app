{"version":3,"sources":["views/web/videoChat/Participant.js","views/web/videoChat/Room.js","views/web/videoChat/VideoChat.js","components/common/Loading.js"],"names":["Participant","participant","isAudio","isVideo","localUser","isVoiceCall","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoDisable","setVideoDisable","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","useEffect","on","removeAllListeners","videoTrack","attach","current","isEnabled","enable","error","console","log","disable","detach","audioTrack","ref","autoPlay","className","muted","Room","roomName","room","handleLogout","userId","role","participants","setParticipants","setIsVideo","setIsAudio","useQuery","headers","API","get","data","staleTime","isLoading","bookingData","profileImage","doctorData","image","url","profileImageURL","participantConnected","prevParticipants","participantDisconnected","p","forEach","off","remoteParticipants","length","sid","onClick","src","alt","prev","localParticipant","_id","patientData","Swal","fire","history","push","getRedirection","docProfile","name","formatDate","parseISO","bookingDate","start","title","text","icon","showCancelButton","cancelButtonText","confirmButtonText","confirmButtonColor","then","result","isConfirmed","VideoChat","user","useSelector","state","auth","queryUrl","URLSearchParams","useLocation","search","roomId","userName","setRoom","setConnecting","post","bookingId","response","Video","connect","token","connectVideo","useCallback","prevRoom","tracks","trackPub","stop","disconnect","tidyUp","event","persisted","window","addEventListener","removeEventListener","Loading","height","style","width"],"mappings":"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","file":"static/js/39.12f9b8e8.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Participant = ({\r\n  participant,\r\n  isAudio = true,\r\n  isVideo = true,\r\n  localUser,\r\n  isVoiceCall,\r\n}) => {\r\n  const [videoTracks, setVideoTracks] = useState([]);\r\n  const [audioTracks, setAudioTracks] = useState([]);\r\n  const [videoDisable, setVideoDisable] = useState(false);\r\n\r\n  const videoRef = useRef();\r\n  const audioRef = useRef();\r\n\r\n  const trackpubsToTracks = (trackMap) =>\r\n    Array.from(trackMap.values())\r\n      .map((publication) => publication.track)\r\n      .filter((track) => track !== null);\r\n\r\n  const trackSubscribed = (track) => {\r\n    if (track.kind === \"video\") {\r\n      setVideoTracks((videoTracks) => [...videoTracks, track]);\r\n    } else if (track.kind === \"audio\") {\r\n      setAudioTracks((audioTracks) => [...audioTracks, track]);\r\n    }\r\n  };\r\n\r\n  const trackUnsubscribed = (track) => {\r\n    if (track.kind === \"video\") {\r\n      setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\r\n    } else if (track.kind === \"audio\") {\r\n      setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\r\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\r\n\r\n    participant.on(\"trackSubscribed\", trackSubscribed);\r\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\r\n\r\n    return () => {\r\n      setVideoTracks([]);\r\n      setAudioTracks([]);\r\n      participant.removeAllListeners();\r\n    };\r\n  }, [participant]);\r\n\r\n  useEffect(() => {\r\n    const videoTrack = videoTracks[0];\r\n    if (videoTrack) {\r\n      videoTrack.on(\"disabled\", () => {\r\n        setVideoDisable(true);\r\n      });\r\n      videoTrack.on(\"enabled\", () => {\r\n        setVideoDisable(false);\r\n        videoTrack.attach(videoRef.current);\r\n      });\r\n      const isEnabled = videoTrack.isEnabled;\r\n      if (isVideo) {\r\n        if (!isEnabled) {\r\n          try {\r\n            videoTrack.enable();\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n        videoTrack.attach(videoRef.current);\r\n      } else {\r\n        videoTrack.disable();\r\n      }\r\n      return () => {\r\n        videoTrack.detach();\r\n      };\r\n    }\r\n  }, [videoTracks, isVideo]);\r\n\r\n  useEffect(() => {\r\n    const audioTrack = audioTracks[0];\r\n    if (audioTrack) {\r\n      audioTrack.on(\"disabled\", () => {\r\n        audioTrack.detach();\r\n      });\r\n      audioTrack.on(\"enabled\", () => {\r\n        audioTrack.attach(audioRef.current);\r\n      });\r\n      if (isAudio) {\r\n        !audioTrack.isEnabled && audioTrack.enable();\r\n        audioTrack.attach(audioRef.current);\r\n      } else audioTrack.disable();\r\n      return () => {\r\n        audioTrack.detach();\r\n      };\r\n    }\r\n  }, [audioTracks, isAudio]);\r\n\r\n  // only for audio call page\r\n  useEffect(() => {\r\n    const videoTrack = videoTracks[0];\r\n    if (isVoiceCall && videoTrack) {\r\n      try {\r\n        videoTrack.disable();\r\n        videoTrack.detach();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    return () => {};\r\n  }, []);\r\n\r\n  // main return\r\n  return (\r\n    <>\r\n      {localUser ? (\r\n        <>\r\n          {isVideo ? (\r\n            <video ref={videoRef} autoPlay={true} />\r\n          ) : (\r\n            <div className=\"camOff centerFlex\"> Cam off </div>\r\n          )}\r\n          <audio ref={audioRef} autoPlay={true} muted={!isAudio} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {videoDisable ? (\r\n            <div className=\"title\">Participant have turned off thier Cam</div>\r\n          ) : (\r\n            <>\r\n              <video ref={videoRef} autoPlay={true} />\r\n            </>\r\n          )}\r\n          <audio ref={audioRef} autoPlay={true} muted={false} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Participant;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { format as formatDate, parseISO } from \"date-fns\";\r\nimport { useQuery } from \"react-query\";\r\nimport Swal from \"sweetalert2\";\r\nimport { docProfile } from \"../../../assets\";\r\nimport API from \"../../../config/AxiosBase\";\r\nimport { headers } from \"../../../helpers/helpers\";\r\nimport { profileImageURL } from \"../../../helpers/helpers\";\r\nimport history from \"../../../helpers/history\";\r\nimport Participant from \"./Participant\";\r\n\r\nconst Room = ({ roomName, room, handleLogout, userId, role }) => {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [isVideo, setIsVideo] = useState(true);\r\n  const [isAudio, setIsAudio] = useState(true);\r\n\r\n  const getBookingDetails = () => {\r\n    headers();\r\n    return API.get(`/booking/${roomName}`, data);\r\n  };\r\n  const { isLoading, data } = useQuery(\"bookingDetails\", getBookingDetails, {\r\n    staleTime: 100 * 60,\r\n  });\r\n  const bookingData = data?.data;\r\n  const profileImage =\r\n    bookingData?.doctorData?.image?.url !== \"None\" &&\r\n    profileImageURL + bookingData?.doctorData?.image?.url;\r\n  useEffect(() => {\r\n    const participantConnected = (participant) => {\r\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\r\n    };\r\n\r\n    const participantDisconnected = (participant) => {\r\n      setParticipants((prevParticipants) =>\r\n        prevParticipants.filter((p) => p !== participant)\r\n      );\r\n    };\r\n\r\n    room.on(\"participantConnected\", participantConnected);\r\n    room.on(\"participantDisconnected\", participantDisconnected);\r\n    room.participants.forEach(participantConnected);\r\n    return () => {\r\n      room.off(\"participantConnected\", participantConnected);\r\n      room.off(\"participantDisconnected\", participantDisconnected);\r\n    };\r\n  }, [room]);\r\n\r\n  const remoteParticipants =\r\n    participants.length === 1 ? (\r\n      participants.map((participant) => (\r\n        <Participant key={participant.sid} participant={participant} />\r\n      ))\r\n    ) : (\r\n      <div className=\"title\"> Waiting for other participant to join .</div>\r\n    );\r\n\r\n  const getRedirection = () => {\r\n    if (\r\n      role &&\r\n      userId !== bookingData?.doctorData?._id &&\r\n      userId !== bookingData?.patientData?._id\r\n    ) {\r\n      Swal.fire(\"Meeting Expired\", \"\", \"error\");\r\n      history.push(role === \"doctor\" ? \"/doc/consulation\" : \"/pat/consulation\");\r\n    }\r\n  };\r\n\r\n  // on metting leave\r\n  const onMeetingLeave = () => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"you wanna leave meeting ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonText: \"No\",\r\n      confirmButtonText: \"Yes\",\r\n\r\n      confirmButtonColor: \"#c82333\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        handleLogout();\r\n      }\r\n    });\r\n  };\r\n  // main return\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid headerPadding  \">\r\n        <div className=\"row basicRow waitingRoom px-0\">\r\n          <div className=\" col-lg-8 col-md-12 col-sm-12\">\r\n            <div className=\"videoDiv\">\r\n              <div className=\"videoControls\">\r\n                <button\r\n                  onClick={() => setIsVideo(!isVideo)}\r\n                  className={isVideo ? \"\" : \"active\"}\r\n                >\r\n                  <img\r\n                    src=\"/images/video.svg\"\r\n                    alt=\"video\"\r\n                    className=\"icon\"\r\n                  ></img>\r\n                </button>\r\n                <button\r\n                  onClick={() => setIsAudio((prev) => !prev)}\r\n                  className={isAudio ? \"\" : \"active\"}\r\n                >\r\n                  <img src=\"/images/mic.svg\" alt=\"audio\" className=\"icon\"></img>\r\n                </button>\r\n              </div>\r\n              {remoteParticipants}\r\n\r\n              <div className=\"myVideoDiv\">\r\n                <Participant\r\n                  localUser\r\n                  isAudio={isAudio}\r\n                  isVideo={isVideo}\r\n                  key={room.localParticipant.sid}\r\n                  participant={room.localParticipant}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {isLoading || (\r\n            <div className=\"col-lg-4 col-md-12  col-sm-12\">\r\n              {getRedirection()}\r\n              <div className=\" flexCenter header\">\r\n                <img\r\n                  src={profileImage || docProfile}\r\n                  alt=\"profile\"\r\n                  className=\"img\"\r\n                ></img>\r\n                <div className=\"ml-2\">\r\n                  <div className=\"waitingText\">Consulation room of</div>\r\n                  <div className=\"name\">\r\n                    Dr. {bookingData?.doctorData?.name}\r\n                  </div>\r\n                  <div className=\"workText\">Doctor</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flexBetweenCenter detailsDiv\">\r\n                <div className=\"item\">\r\n                  <div className=\"title\">Patient</div>\r\n                  <div className=\"text\"> {bookingData?.patientData?.name}</div>\r\n                </div>\r\n                <div className=\"item\">\r\n                  <div className=\"title\">Appointment time</div>\r\n                  <div className=\"text\">\r\n                    {formatDate(\r\n                      parseISO(bookingData?.bookingDate?.start),\r\n                      \"Pp\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button onClick={onMeetingLeave} className=\"btn btn-danger w-100\">\r\n                Leave Meeting\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Video from \"twilio-video\";\r\nimport API from \"../../../config/AxiosBase\";\r\nimport { headers } from \"../../../helpers/helpers\";\r\nimport Room from \"./Room\";\r\nimport history from \"../../../helpers/history\";\r\nimport Loading from \"../../../components/common/Loading\";\r\nimport \"./video.css\";\r\n\r\nconst VideoChat = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const role = user?.role;\r\n\r\n  const queryUrl = new URLSearchParams(useLocation().search);\r\n  const roomId = queryUrl.get(\"roomId\");\r\n  const userName = queryUrl.get(\"name\");\r\n  const [room, setRoom] = useState(null);\r\n  const [connecting, setConnecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const connectVideo = async () => {\r\n      setConnecting(true);\r\n      try {\r\n        headers();\r\n        const response = await API.post(\"/videoChat/video/token\", {\r\n          name: userName,\r\n          bookingId: roomId,\r\n        });\r\n        Video.connect(response.data.token, { name: roomId }).then((room) => {\r\n          setConnecting(false);\r\n          setRoom(room);\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setConnecting(false);\r\n      }\r\n    };\r\n\r\n    connectVideo();\r\n  }, [roomId, userName]);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    setRoom((prevRoom) => {\r\n      if (prevRoom) {\r\n        prevRoom.localParticipant.tracks.forEach((trackPub) => {\r\n          trackPub.track.stop();\r\n        });\r\n        prevRoom.disconnect();\r\n\r\n        history.push(\r\n          role === \"doctor\"\r\n            ? \"/dashboard/consulation\"\r\n            : `/dashboard/consulation?review=true&&bookingId=${roomId}`\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (room) {\r\n      const tidyUp = (event) => {\r\n        if (event.persisted) {\r\n          return;\r\n        }\r\n        if (room) {\r\n          handleLogout();\r\n        }\r\n      };\r\n      window.addEventListener(\"pagehide\", tidyUp);\r\n      window.addEventListener(\"beforeunload\", tidyUp);\r\n      return () => {\r\n        window.removeEventListener(\"pagehide\", tidyUp);\r\n        window.removeEventListener(\"beforeunload\", tidyUp);\r\n      };\r\n    }\r\n  }, [room, handleLogout]);\r\n\r\n  let render;\r\n  if (room) {\r\n    render = (\r\n      <Room\r\n        userId={userName}\r\n        roomName={roomId}\r\n        room={room}\r\n        handleLogout={handleLogout}\r\n        role={role}\r\n      />\r\n    );\r\n  } else {\r\n    render = <Loading />;\r\n  }\r\n  return render;\r\n};\r\n\r\nexport default VideoChat;\r\n","import React from \"react\";\r\nimport LoadingComponent from \"@material-ui/core/CircularProgress\";\r\nexport default function Loading({ height = \"80vh\" }) {\r\n  return (\r\n    <div className=\"centerFlex\" style={{ height: height, width: \"100%\" }}>\r\n      <LoadingComponent />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}