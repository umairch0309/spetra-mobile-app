{"version":3,"sources":["components/dashboard/NotificationSec.js","hooks/mutation/useMarkSeenNotification.js","components/dashboard/WelcomeSec.js","views/dashboard/dashboard.js","services/web/index.js","redux/actions/dashboardActions.js","services/panel/index.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js","../node_modules/react-query/es/core/mutationObserver.js","../node_modules/react-query/es/react/useMutation.js","components/notification/NotificationDiv.js"],"names":["NotificationSec","useState","notiData","setnotiData","user","useSelector","state","auth","userId","_id","role","useQuery","getNewNotification","data","isLoading","deleteNotificationFun","queryKey","queryApi","queryClient","useQueryClient","useMutation","onSettled","invalidateQueries","useMarkSeenNotification","markSeenAllNotification","useEffect","length","sliceArr","slice","className","onClick","mutate","map","item","NotificationDiv","style","borderRadius","history","push","src","alt","WelcomeSec","loading","getDashboardCounts","counts","name","consultations","appointments","completed","DashboardPage","dispatch","useDispatch","setHeaderTitle","getIpLookup","axios","get","newBooking","headers","API","post","getSocialLinks","getFeaturedSpecialties","getAllSpecialties","getPatProfile","getInsuranceDetails","title","type","SET_HEADER_TITLE","payload","getNotification","delete","getDocProfile","updateSlot","resData","physicalTimeSlot","slots","videoTimeSlot","put","getAppointments","count","getConsulations","getChatToken","a","response","getPaymentHistory","QueryObserver","_Subscribable","client","options","_this","call","this","trackedProps","previousSelectError","bindMethods","setOptions","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","Error","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","refetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","getQueryCache","build","createResult","getCurrentResult","currentResult","trackResult","result","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","typedKey","includes","getNextResult","_this3","Promise","resolve","reject","unsubscribe","subscribe","isFetching","isError","throwOnError","error","getCurrentQuery","fetch","_extends","meta","refetchPage","fetchOptimistic","_this4","then","fetchOptions","_this5","promise","catch","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","undefined","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","x","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","onQueryUpdate","action","onSuccess","isCancelledError","onError","_this8","notifyManager","batch","listener","Subscribable","retryOnMount","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","useRef","forceUpdate","errorResetBoundary","useContext","batchCalls","suspense","useErrorBoundary","observer","current","_ref","arg1","arg2","arg3","parseQueryArgs","MutationObserver","defaultMutationOptions","_this$currentMutation","currentMutation","onMutationUpdate","variables","mutateOptions","getMutationCache","execute","getDefaultState","context","parseMutationArgs","obsRef","useCallback","mutateAsync","booking","visitType","formatDate","parseISO","bookingDate","start","handleJoinMeeting"],"mappings":"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","file":"static/js/34.19a1d672.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useMarkSeenNotification from \"../../hooks/mutation/useMarkSeenNotification\";\r\nimport history from \"../../helpers/history\";\r\nimport {\r\n  getNewNotification,\r\n  markSeenAllNotification,\r\n} from \"../../services/panel\";\r\nimport NotificationDiv from \"../notification/NotificationDiv\";\r\n\r\nexport default function NotificationSec() {\r\n  const [notiData, setnotiData] = useState([]);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const userId = user?._id;\r\n  const role = user?.role;\r\n  const { data, isLoading } = useQuery(\"notification\", getNewNotification);\r\n\r\n  const deleteNotificationFun = useMarkSeenNotification(\r\n    \"notification\",\r\n    markSeenAllNotification\r\n  );\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (data?.data?.length > 3) {\r\n        const sliceArr = data?.data?.slice(0, 3);\r\n        setnotiData(sliceArr);\r\n      } else setnotiData(data?.data);\r\n    }\r\n    return () => {};\r\n  }, [data]);\r\n\r\n  const clearAll = () => {\r\n    setnotiData([]);\r\n    deleteNotificationFun.mutate();\r\n  };\r\n  return (\r\n    <div className=\"secDiv notificationSec\">\r\n      {isLoading || (\r\n        <div className=\"mainFlex\">\r\n          <div className=\"flexBetweenCenter\">\r\n            <div className=\"secTitle mb-1\">Don’t Forget</div>\r\n            {notiData?.length > 0 && (\r\n              <div onClick={clearAll} className=\"clearText\">\r\n                Clear\r\n              </div>\r\n            )}\r\n          </div>\r\n          {notiData?.length <= 0 ? (\r\n            <div className=\"textColor2 text-center mt-2\">\r\n              No new notifications to note\r\n            </div>\r\n          ) : (\r\n            notiData?.map((item) => {\r\n              return (\r\n                <NotificationDiv\r\n                  item={item}\r\n                  userId={userId}\r\n                  key={item._id}\r\n                  role={role}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n\r\n          {notiData.length > 0 && (\r\n            <div className=\"centerDiv \" style={{ borderRadius: \"2rem\" }}>\r\n              <div\r\n                onClick={() => history.push(\"/dashboard/notification\")}\r\n                className=\"textBlue pointer poppinsSb mt-4\"\r\n              >\r\n                View all\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <img\r\n        src=\"/images/notiBg.png\"\r\n        className=\"imgBg d-none d-md-block\"\r\n        alt=\"noti\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n","import { useMutation, useQueryClient } from \"react-query\";\r\nexport default function useMarkSeenNotification(queryKey, queryApi) {\r\n  const queryClient = useQueryClient();\r\n  const queryFun = useMutation(queryApi, {\r\n    // Always refetch after error or success:\r\n    onSettled: () => {\r\n      queryClient.invalidateQueries(queryKey);\r\n    },\r\n  });\r\n\r\n  return queryFun;\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getDashboardCounts } from \"../../services/web\";\r\n\r\nexport default function WelcomeSec() {\r\n  const { user, loading } = useSelector((state) => state.auth);\r\n  const role = user?.role;\r\n\r\n  // fetching dashboard data\r\n  const { data, isLoading } = useQuery(\"counts\", getDashboardCounts);\r\n  const counts = data?.data;\r\n\r\n  // main return\r\n  return (\r\n    <div>\r\n      <div className=\"welcomeSec\">\r\n        {loading || (\r\n          <div className=\"secTitle mb-1\">\r\n            Hi, {`${role === \"doctor\" ? `Dr. ` : \"\"}${user?.name}`}\r\n          </div>\r\n        )}\r\n        <div className=\"flexBetweenCenter welcomeFlex\">\r\n          <div className=\"welcomeCard consulationBg\">\r\n            <img src=\"/images/newCons.png\" className=\"img\"></img>\r\n            <div className=\"title\">\r\n              New\r\n              <br /> Consultation Requests\r\n            </div>\r\n            <div className=\"value\">{isLoading ? 0 : counts?.consultations}</div>\r\n          </div>\r\n          <div className=\"welcomeCard revenueBg\">\r\n            <img src=\"/images/upIcon.png\" className=\"img\"></img>\r\n            <div className=\"title\">\r\n              New\r\n              <br /> Appointment Requests\r\n            </div>\r\n            <div className=\"value\">{isLoading ? 0 : counts?.appointments}</div>\r\n          </div>\r\n          <div className=\"welcomeCard consulationBg2\">\r\n            <img src=\"/images/tick.png\" className=\"img\"></img>\r\n            <div className=\"title\">\r\n              Total\r\n              <br /> Completed Consultations\r\n            </div>\r\n            <div className=\"value\">{isLoading ? 0 : counts?.completed}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport NotificationSec from \"../../components/dashboard/NotificationSec\";\r\nimport WelcomeSec from \"../../components/dashboard/WelcomeSec\";\r\nimport { setHeaderTitle } from \"../../redux/actions/dashboardActions\";\r\nimport \"./dashboard.css\";\r\n\r\nexport default function DashboardPage() {\r\n  // setting Header title\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(setHeaderTitle(\"Dashboard\"));\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"contentRow dashboard\">\r\n      <WelcomeSec />\r\n      <NotificationSec />\r\n    </div>\r\n  );\r\n}\r\n","import API from \"../../config/AxiosBase\";\r\nimport { headers } from \"../../helpers/helpers\";\r\nimport axios from \"axios\";\r\n\r\nexport const getIpLookup = () => {\r\n  return axios.get(\"https://extreme-ip-lookup.com/json/\");\r\n};\r\nexport const newBooking = (data) => {\r\n  headers();\r\n  return API.post(`/docprofile/new-booking`, data);\r\n};\r\nexport const getSocialLinks = () => {\r\n  return API.get(`/admin/get-social-links`);\r\n};\r\nexport const getDashboardCounts = () => {\r\n  headers();\r\n  return API.get(`/auth/dashboard-counts`);\r\n};\r\nexport const getFeaturedSpecialties = () => {\r\n  headers();\r\n  return API.get(`/admin/all-speciality?featured=true`);\r\n};\r\nexport const getAllSpecialties = () => {\r\n  headers();\r\n  return API.get(`/admin/all-speciality`);\r\n};\r\nexport const getPatProfile = () => {\r\n  headers();\r\n  return API.get(`/patprofile`);\r\n};\r\nexport const getInsuranceDetails = () => {\r\n  headers();\r\n  return API.get(`/insurance/profile`);\r\n};\r\n","import { SET_HEADER_TITLE } from \"../constants/dashboardConstant\";\r\n\r\nexport const setHeaderTitle = (title) => {\r\n  return {\r\n    type: SET_HEADER_TITLE,\r\n    payload: title,\r\n  };\r\n};\r\n","import API from \"../../config/AxiosBase\";\r\nimport { headers } from \"../../helpers/helpers\";\r\n\r\n// notification\r\nexport const getNewNotification = () => {\r\n  headers();\r\n  return API.get(`/notification/?seen=true`);\r\n};\r\nexport const getNotification = () => {\r\n  headers();\r\n  return API.get(`/notification/`);\r\n};\r\nexport const markSeenAllNotification = () => {\r\n  headers();\r\n  return API.delete(`/notification/`);\r\n};\r\n// dashboard counts\r\nexport const getDashboardCounts = () => {\r\n  headers();\r\n  return API.get(`/auth/dashboard-counts`);\r\n};\r\n\r\n// profile\r\nexport const getDocProfile = () => {\r\n  headers();\r\n  return API.get(`/docprofile`);\r\n};\r\nexport const getPatProfile = () => {\r\n  headers();\r\n  return API.get(`/patprofile`);\r\n};\r\nexport const updateSlot = (data) => {\r\n  let resData =\r\n    data?.type === \"physical\"\r\n      ? { physicalTimeSlot: data.slots }\r\n      : { videoTimeSlot: data.slots };\r\n\r\n  headers();\r\n  return API.put(`/docprofile/update-event`, resData);\r\n};\r\n\r\n// Appointments\r\nexport const getAppointments = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/booking/?visitType=physical&&count=${count}`);\r\n};\r\n// consulation\r\nexport const getConsulations = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/booking/?visitType=video&&count=${count}`);\r\n};\r\n\r\n// chat\r\nexport const getChatToken = async () => {\r\n  headers();\r\n  const response = await API.get(\"/chat/token\");\r\n  const { data } = response;\r\n  return data;\r\n};\r\n\r\n// payment history\r\nexport const getPaymentHistory = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/patprofile/get-payments?count=${count}`);\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (query.state.status !== 'error' || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    this.currentResult = _extends({}, state, {\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    });\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && obsRef.current.options.useErrorBoundary) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}","import { format as formatDate, parseISO } from \"date-fns\";\r\nimport { handleJoinMeeting } from \"../../helpers/helpers\";\r\n\r\nconst NotificationDiv = ({ item, userId, role }) => {\r\n  return (\r\n    <div className=\"flexBetweenCenter notificationDiv\">\r\n      <div className=\"flexCenter\">\r\n        <img src=\"/images/notiBell.png\" className=\"img\" alt=\"noti\"></img>\r\n        <div className=\"d-flex\">\r\n          <div className=\"title\">\r\n            {`${\r\n              item?.booking?.visitType === \"video\"\r\n                ? \"Consulation\"\r\n                : \"Appointment\"\r\n            } with ${\r\n              item[role === \"patient\" ? \"doctorData\" : \"patientData\"]?.name\r\n            } at ${formatDate(\r\n              parseISO(item?.booking?.bookingDate?.start),\r\n              \"Pp\"\r\n            )} `}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={() => handleJoinMeeting(item.booking, userId)}\r\n        className=\"btn btn-outline-primary btn-sm\"\r\n      >\r\n        join\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationDiv;\r\n"],"sourceRoot":""}