{"version":3,"sources":["views/notifications/NotificationPage.js","components/common/Loading.js","redux/actions/dashboardActions.js","services/panel/index.js","components/notification/NotificationDiv.js"],"names":["AllNotificationsPage","user","useSelector","state","auth","userId","_id","role","dispatch","useDispatch","useEffect","setHeaderTitle","useQuery","getNotification","enabled","undefined","data","isLoading","notiData","className","style","minHeight","borderRadius","length","map","item","Loading","height","width","title","type","SET_HEADER_TITLE","payload","getNewNotification","headers","API","get","markSeenAllNotification","delete","getDocProfile","getPatProfile","updateSlot","resData","physicalTimeSlot","slots","videoTimeSlot","put","getAppointments","count","queryKey","getConsulations","getChatToken","a","response","getPaymentHistory","NotificationDiv","src","alt","booking","visitType","name","formatDate","parseISO","bookingDate","start","onClick","handleJoinMeeting"],"mappings":"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","file":"static/js/38.9889dfd6.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../../components/common/Loading\";\r\nimport NotificationDiv from \"../../components/notification/NotificationDiv\";\r\nimport { setHeaderTitle } from \"../../redux/actions/dashboardActions\";\r\nimport { getNotification } from \"../../services/panel\";\r\n\r\nexport default function AllNotificationsPage() {\r\n  // fetching user data\r\n  const { user } = useSelector((state) => state.auth);\r\n  const userId = user?._id;\r\n  const role = user?.role;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(setHeaderTitle(\"Notification\"));\r\n    return () => {};\r\n  }, []);\r\n\r\n  const { data, isLoading } = useQuery(\r\n    [\"notification\", role],\r\n    getNotification,\r\n    {\r\n      enabled: role != undefined,\r\n    }\r\n  );\r\n\r\n  const notiData = data?.data;\r\n\r\n  //   main return\r\n  return (\r\n    <div className=\"contentRow\">\r\n      {isLoading && <Loading />}\r\n      {isLoading || (\r\n        <>\r\n          <div\r\n            className=\"bg-white p-2\"\r\n            style={{ minHeight: \"50vh\", borderRadius: \"2rem\" }}\r\n          >\r\n            {notiData?.length <= 0 ? (\r\n              <div className=\"textColor2 text-center mt-5\">\r\n                No new notifications to note\r\n              </div>\r\n            ) : (\r\n              notiData?.map((item) => {\r\n                return (\r\n                  <div className=\"mb-3\">\r\n                    <NotificationDiv\r\n                      item={item}\r\n                      userId={userId}\r\n                      key={item._id}\r\n                      role={role}\r\n                    />\r\n                  </div>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoadingComponent from \"@material-ui/core/CircularProgress\";\r\nexport default function Loading({ height = \"80vh\" }) {\r\n  return (\r\n    <div className=\"centerFlex\" style={{ height: height, width: \"100%\" }}>\r\n      <LoadingComponent />\r\n    </div>\r\n  );\r\n}\r\n","import { SET_HEADER_TITLE } from \"../constants/dashboardConstant\";\r\n\r\nexport const setHeaderTitle = (title) => {\r\n  return {\r\n    type: SET_HEADER_TITLE,\r\n    payload: title,\r\n  };\r\n};\r\n","import API from \"../../config/AxiosBase\";\r\nimport { headers } from \"../../helpers/helpers\";\r\n\r\n// notification\r\nexport const getNewNotification = () => {\r\n  headers();\r\n  return API.get(`/notification/?seen=true`);\r\n};\r\nexport const getNotification = () => {\r\n  headers();\r\n  return API.get(`/notification/`);\r\n};\r\nexport const markSeenAllNotification = () => {\r\n  headers();\r\n  return API.delete(`/notification/`);\r\n};\r\n// dashboard counts\r\nexport const getDashboardCounts = () => {\r\n  headers();\r\n  return API.get(`/auth/dashboard-counts`);\r\n};\r\n\r\n// profile\r\nexport const getDocProfile = () => {\r\n  headers();\r\n  return API.get(`/docprofile`);\r\n};\r\nexport const getPatProfile = () => {\r\n  headers();\r\n  return API.get(`/patprofile`);\r\n};\r\nexport const updateSlot = (data) => {\r\n  let resData =\r\n    data?.type === \"physical\"\r\n      ? { physicalTimeSlot: data.slots }\r\n      : { videoTimeSlot: data.slots };\r\n\r\n  headers();\r\n  return API.put(`/docprofile/update-event`, resData);\r\n};\r\n\r\n// Appointments\r\nexport const getAppointments = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/booking/?visitType=physical&&count=${count}`);\r\n};\r\n// consulation\r\nexport const getConsulations = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/booking/?visitType=video&&count=${count}`);\r\n};\r\n\r\n// chat\r\nexport const getChatToken = async () => {\r\n  headers();\r\n  const response = await API.get(\"/chat/token\");\r\n  const { data } = response;\r\n  return data;\r\n};\r\n\r\n// payment history\r\nexport const getPaymentHistory = ({ queryKey }) => {\r\n  const count = queryKey[1];\r\n  headers();\r\n  return API.get(`/patprofile/get-payments?count=${count}`);\r\n};\r\n","import { format as formatDate, parseISO } from \"date-fns\";\r\nimport { handleJoinMeeting } from \"../../helpers/helpers\";\r\n\r\nconst NotificationDiv = ({ item, userId, role }) => {\r\n  return (\r\n    <div className=\"flexBetweenCenter notificationDiv\">\r\n      <div className=\"flexCenter\">\r\n        <img src=\"/images/notiBell.png\" className=\"img\" alt=\"noti\"></img>\r\n        <div className=\"d-flex\">\r\n          <div className=\"title\">\r\n            {`${\r\n              item?.booking?.visitType === \"video\"\r\n                ? \"Consulation\"\r\n                : \"Appointment\"\r\n            } with ${\r\n              item[role === \"patient\" ? \"doctorData\" : \"patientData\"]?.name\r\n            } at ${formatDate(\r\n              parseISO(item?.booking?.bookingDate?.start),\r\n              \"Pp\"\r\n            )} `}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={() => handleJoinMeeting(item.booking, userId)}\r\n        className=\"btn btn-outline-primary btn-sm\"\r\n      >\r\n        join\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationDiv;\r\n"],"sourceRoot":""}