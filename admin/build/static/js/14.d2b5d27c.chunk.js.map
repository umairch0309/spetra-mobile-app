{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-query/es/core/mutationObserver.js","../node_modules/react-query/es/react/useMutation.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","MutationObserver","_Subscribable","client","options","_this","this","setOptions","bindMethods","updateResult","_inheritsLoose","_proto","mutate","bind","reset","defaultMutationOptions","onUnsubscribe","_this$currentMutation","listeners","currentMutation","removeObserver","onMutationUpdate","action","notifyOptions","type","onSuccess","onError","notify","getCurrentResult","currentResult","variables","mutateOptions","getMutationCache","build","_extends","addObserver","execute","state","getDefaultState","isLoading","status","isSuccess","isError","isIdle","_this2","notifyManager","batch","data","context","onSettled","error","forEach","listener","Subscribable","useMutation","arg1","arg2","arg3","mountedRef","React","useRef","forceUpdate","useState","parseMutationArgs","queryClient","useQueryClient","obsRef","current","useEffect","unsubscribe","subscribe","batchCalls","x","useCallback","catch","noop","useErrorBoundary","mutateAsync","QueryObserver","trackedProps","previousSelectError","remove","refetch","onSubscribe","currentQuery","shouldFetchOnMount","executeFetch","updateTimers","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","prevOptions","prevQuery","defaultQueryObserverOptions","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","staleTime","updateStaleTimeout","refetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","getQueryCache","createResult","trackResult","result","trackedResult","keys","key","defineProperty","configurable","enumerable","get","typedKey","includes","getNextResult","_this3","Promise","resolve","reject","isFetching","throwOnError","getCurrentQuery","fetch","fetchOptimistic","_this4","then","fetchOptions","_this5","promise","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","onQueryUpdate","isCancelledError","_this8","retryOnMount","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","createValue","_isReset","clearReset","isReset","QueryErrorResetBoundaryContext","createContext","useBaseQuery","Observer","errorResetBoundary","useContext","suspense","observer","_ref","useQuery","parseQueryArgs"],"mappings":"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","file":"static/js/14.d2b5d27c.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    this.currentResult = _extends({}, state, {\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    });\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && obsRef.current.options.useErrorBoundary) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}"],"sourceRoot":""}