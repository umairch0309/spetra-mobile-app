{"version":3,"sources":["containers/ApiFun.js","../node_modules/react-query/es/core/mutationObserver.js","../node_modules/react-query/es/react/useMutation.js","query/mutations/index.js","views/pages/Insurance/InsuranceDetail.js"],"names":["headerToken","headers","localStorage","adminToken","getDashboardCounts","AxiosBase","get","getPatients","deactiveUser","status","id","put","activeDoctors","pendingDoctors","approveDocForm","docformId","console","log","declineDocForm","verifiedInsurance","pendingInsurance","rejectedInsurance","updateInsurance","getAllSpecialities","addNewSpeciality","formData","post","deleteSpeciality","specialityId","delete","updateSpeciality","data","getAllLanguages","addNewLanguage","name","deleteLanguage","languageId","updatePassword","allConsultations","allAppointments","updateSocial","getSocial","MutationObserver","_Subscribable","client","options","_this","call","this","setOptions","bindMethods","updateResult","_inheritsLoose","_proto","prototype","mutate","bind","reset","defaultMutationOptions","onUnsubscribe","_this$currentMutation","listeners","length","currentMutation","removeObserver","onMutationUpdate","action","notifyOptions","type","onSuccess","onError","notify","getCurrentResult","currentResult","undefined","variables","mutateOptions","getMutationCache","build","_extends","addObserver","execute","state","getDefaultState","isLoading","isSuccess","isError","isIdle","_this2","notifyManager","batch","context","onSettled","error","forEach","listener","Subscribable","useMutation","arg1","arg2","arg3","mountedRef","React","useRef","forceUpdate","useState","parseMutationArgs","queryClient","useQueryClient","obsRef","current","useEffect","unsubscribe","subscribe","batchCalls","x","useCallback","catch","noop","useErrorBoundary","mutateAsync","useDeleteItemMutataion","queryFn","queryKey","onMutate","a","cancelQueries","previousData","getQueryData","setQueryData","old","cloneData","filterData","filter","el","_id","err","invalidateQueries","InsuranceDetail","propsData","useLocation","updateInsuranceForm","history","push","className","style","justifyContent","color","variant","shape","size","onClick","goBack","insuranceCompany","planName","primaryInsuranceName","policyNo","groupNo","primaryInsuranceDOB","patientName","patientDOB"],"mappings":"iGAAA,0xBAGMA,EAAc,CAClBC,QAAS,CACP,iBAHUC,aAAaC,aAQdC,EAAqB,WAChC,OAAOC,IAAUC,IAAV,gBAA+BN,IAI3BO,EAAc,WACzB,OAAOF,IAAUC,IAAV,sBAAqCN,IAGjCQ,EAAe,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACrC,OAAOL,IAAUM,IAAV,+BAAsCD,GAAM,CAAED,UAAUT,IAIpDY,EAAgB,WAC3B,OAAOP,IAAUC,IAAV,wBAAuCN,IAEnCa,EAAiB,WAC5B,OAAOR,IAAUC,IAAV,yBAAwCN,IAOpCc,EAAiB,SAACC,GAE7B,OADAC,QAAQC,IAAIF,GACLV,IAAUM,IAAV,kCAAyCI,GAAa,GAAIf,IAEtDkB,EAAiB,SAACH,GAE7B,OADAC,QAAQC,IAAIF,GACLV,IAAUM,IAAV,kCAAyCI,GAAa,GAAIf,IAKtDmB,EAAoB,WAC/B,OAAOd,IAAUC,IAAV,kCAAiDN,IAE7CoB,EAAmB,WAC9B,OAAOf,IAAUC,IAAV,iCAAgDN,IAE5CqB,EAAoB,WAC/B,OAAOhB,IAAUC,IAAV,kCAAiDN,IAE7CsB,EAAkB,SAAC,GAAoB,IAAlBZ,EAAiB,EAAjBA,GAAID,EAAa,EAAbA,OACpC,OAAOJ,IAAUM,IAAV,0BAAiCD,GAAM,CAAED,UAAUT,IAI/CuB,EAAqB,WAChC,OAAOlB,IAAUC,IAAV,wBAAuCN,IAEnCwB,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjC,OAAOpB,IAAUqB,KAAV,wBAAwCD,EAAUzB,IAE9C2B,EAAmB,SAACC,GAC/B,OAAOvB,IAAUwB,OAAV,mCACuBD,GAC5B5B,IAGS8B,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMrB,EAAS,EAATA,GACvC,OAAOL,IAAUM,IAAV,mCAA0CD,GAAMqB,EAAM/B,IAIlDgC,EAAkB,WAC7B,OAAO3B,IAAUC,IAAV,uBAAsCN,IAElCiC,EAAiB,SAACC,GAC7B,OAAO7B,IAAUqB,KAAV,sBAAsCQ,EAAMlC,IAExCmC,EAAiB,SAACC,GAE7B,OADApB,QAAQC,IAAImB,GACL/B,IAAUwB,OAAV,iCAA2CO,GAAcpC,IAIrDqC,EAAiB,SAACN,GAC7B,OAAO1B,IAAUqB,KAAV,yBAAyCK,EAAM/B,IAG3CsC,EAAmB,WAC9B,OAAOjC,IAAUC,IAAV,2BAA0CN,IAGtCuC,EAAkB,WAC7B,OAAOlC,IAAUC,IAAV,0BAAyCN,IAIrCwC,EAAe,SAACT,GAC3B,OAAO1B,IAAUqB,KAAV,6BAA6CK,EAAM/B,IAE/CyC,EAAY,WACvB,OAAOpC,IAAUC,IAAV,0BAAyCN,K,8HCpGvC0C,EAAgC,SAAUC,GAGnD,SAASD,EAAiBE,EAAQC,GAChC,IAAIC,EAWJ,OATAA,EAAQH,EAAcI,KAAKC,OAASA,MAC9BJ,OAASA,EAEfE,EAAMG,WAAWJ,GAEjBC,EAAMI,cAENJ,EAAMK,eAECL,EAdTM,YAAeV,EAAkBC,GAiBjC,IAAIU,EAASX,EAAiBY,UAiG9B,OA/FAD,EAAOH,YAAc,WACnBF,KAAKO,OAASP,KAAKO,OAAOC,KAAKR,MAC/BA,KAAKS,MAAQT,KAAKS,MAAMD,KAAKR,OAG/BK,EAAOJ,WAAa,SAAoBJ,GACtCG,KAAKH,QAAUG,KAAKJ,OAAOc,uBAAuBb,IAGpDQ,EAAOM,cAAgB,WAEnB,IAAIC,EADDZ,KAAKa,UAAUC,SAGgC,OAAjDF,EAAwBZ,KAAKe,kBAAoCH,EAAsBI,eAAehB,QAI3GK,EAAOY,iBAAmB,SAA0BC,GAClDlB,KAAKG,eAEL,IAAIgB,EAAgB,CAClBN,WAAW,GAGO,YAAhBK,EAAOE,KACTD,EAAcE,WAAY,EACD,UAAhBH,EAAOE,OAChBD,EAAcG,SAAU,GAG1BtB,KAAKuB,OAAOJ,IAGdd,EAAOmB,iBAAmB,WACxB,OAAOxB,KAAKyB,eAGdpB,EAAOI,MAAQ,WACbT,KAAKe,qBAAkBW,EACvB1B,KAAKG,eACLH,KAAKuB,OAAO,CACVV,WAAW,KAIfR,EAAOE,OAAS,SAAgBoB,EAAW9B,GAWzC,OAVAG,KAAK4B,cAAgB/B,EAEjBG,KAAKe,iBACPf,KAAKe,gBAAgBC,eAAehB,MAGtCA,KAAKe,gBAAkBf,KAAKJ,OAAOiC,mBAAmBC,MAAM9B,KAAKJ,OAAQmC,YAAS,GAAI/B,KAAKH,QAAS,CAClG8B,UAAgC,qBAAdA,EAA4BA,EAAY3B,KAAKH,QAAQ8B,aAEzE3B,KAAKe,gBAAgBiB,YAAYhC,MAC1BA,KAAKe,gBAAgBkB,WAG9B5B,EAAOF,aAAe,WACpB,IAAI+B,EAAQlC,KAAKe,gBAAkBf,KAAKe,gBAAgBmB,MAAQC,cAChEnC,KAAKyB,cAAgBM,YAAS,GAAIG,EAAO,CACvCE,UAA4B,YAAjBF,EAAMzE,OACjB4E,UAA4B,YAAjBH,EAAMzE,OACjB6E,QAA0B,UAAjBJ,EAAMzE,OACf8E,OAAyB,SAAjBL,EAAMzE,OACd8C,OAAQP,KAAKO,OACbE,MAAOT,KAAKS,SAIhBJ,EAAOkB,OAAS,SAAgB1B,GAC9B,IAAI2C,EAASxC,KAEbyC,IAAcC,OAAM,WAEdF,EAAOZ,gBACL/B,EAAQwB,WACwB,MAAlCmB,EAAOZ,cAAcP,WAA6BmB,EAAOZ,cAAcP,UAAUmB,EAAOf,cAAc1C,KAAMyD,EAAOf,cAAcE,UAAWa,EAAOf,cAAckB,SAC/H,MAAlCH,EAAOZ,cAAcgB,WAA6BJ,EAAOZ,cAAcgB,UAAUJ,EAAOf,cAAc1C,KAAM,KAAMyD,EAAOf,cAAcE,UAAWa,EAAOf,cAAckB,UAC9J9C,EAAQyB,UACe,MAAhCkB,EAAOZ,cAAcN,SAA2BkB,EAAOZ,cAAcN,QAAQkB,EAAOf,cAAcoB,MAAOL,EAAOf,cAAcE,UAAWa,EAAOf,cAAckB,SAC5H,MAAlCH,EAAOZ,cAAcgB,WAA6BJ,EAAOZ,cAAcgB,eAAUlB,EAAWc,EAAOf,cAAcoB,MAAOL,EAAOf,cAAcE,UAAWa,EAAOf,cAAckB,WAK7K9C,EAAQgB,WACV2B,EAAO3B,UAAUiC,SAAQ,SAAUC,GACjCA,EAASP,EAAOf,sBAMjB/B,EAnHkC,C,MAoHzCsD,G,SCpHK,SAASC,EAAYC,EAAMC,EAAMC,GACtC,IAAIC,EAAaC,IAAMC,QAAO,GAG1BC,EADkBF,IAAMG,SAAS,GACH,GAE9B5D,EAAU6D,YAAkBR,EAAMC,EAAMC,GACxCO,EAAcC,cACdC,EAASP,IAAMC,SAEdM,EAAOC,QAGVD,EAAOC,QAAQ7D,WAAWJ,GAF1BgE,EAAOC,QAAU,IAAIpE,EAAiBiE,EAAa9D,GAKrD,IAAI4B,EAAgBoC,EAAOC,QAAQtC,mBACnC8B,IAAMS,WAAU,WACdV,EAAWS,SAAU,EACrB,IAAIE,EAAcH,EAAOC,QAAQG,UAAUxB,IAAcyB,YAAW,WAC9Db,EAAWS,SACbN,GAAY,SAAUW,GACpB,OAAOA,EAAI,SAIjB,OAAO,WACLd,EAAWS,SAAU,EACrBE,OAED,IACH,IAAIzD,EAAS+C,IAAMc,aAAY,SAAUzC,EAAWC,GAClDiC,EAAOC,QAAQvD,OAAOoB,EAAWC,GAAeyC,MAAMC,OACrD,IAEH,GAAI7C,EAAcoB,OAASgB,EAAOC,QAAQjE,QAAQ0E,iBAChD,MAAM9C,EAAcoB,MAGtB,OAAOd,YAAS,GAAIN,EAAe,CACjClB,OAAQA,EACRiE,YAAa/C,EAAclB,W,mHC7ClBkE,EAAyB,SAACC,EAASC,GAC9C,IAAMhB,EAAcC,cA+BpB,OA9BsBX,YAAYyB,EAAS,CAEzCE,SAAS,WAAD,4BAAE,+BAAAC,EAAA,6DAASnH,EAAT,EAASA,GAAT,SAEFiG,EAAYmB,cAAcH,GAFxB,cAKFI,EAAepB,EAAYqB,aAAaL,GAG9ChB,EAAYsB,aAAaN,GAAU,SAACO,GAClC,IAAIC,EAAYD,EACZE,EAAaF,EAAInG,KAAKsG,QAAO,SAACC,GAAD,OAAQA,EAAGC,MAAQ7H,KAEpD,OADAyH,EAAUpG,KAAOqG,EACVD,KAZD,kBAgBD,CAAEJ,iBAhBD,2CAAF,mDAAC,GAmBTzD,QAAS,SAACkE,EAAK9H,EAAIiF,GACjBgB,EAAYsB,aAAaN,EAAUhC,EAAQoC,eAG7CnC,UAAW,WACTe,EAAY8B,kBAAkBd,Q,iCC9BpC,8GAMe,SAASe,IACtB,IAAMC,EAAYC,cAAc1D,MACxBzE,EAAWkI,EAAXlI,OACRO,QAAQC,IAAI0H,GAEZ,IAAME,EAAsBpB,YAC1BnG,IACW,YAAXb,EACI,mBACW,aAAXA,EACA,kBACA,qBAKN,OAHAsG,qBAAU,gBACUrC,IAAdiE,GAAyBG,IAAQC,KAAK,kCACzC,IAED,qBAAKC,UAAU,0BAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,8BACA,uBACA,sBAAKA,UAAU,aAAaC,MAAO,CAAEC,eAAgB,YAArD,UACc,aAAXzI,GACC,cAAC,IAAD,CACE0I,MAAM,UACNC,QAAQ,UACRC,MAAM,OACNC,KAAK,KACLN,UAAU,cACVO,QAAS,WACPV,EAAoBtF,OAAO,CACzB7C,GAAIiI,EAAUJ,IACd9H,OAAQ,aAEVqI,IAAQU,UAXZ,qBAkBU,aAAX/I,GACC,cAAC,IAAD,CACE0I,MAAM,SACNC,QAAQ,UACRC,MAAM,OACNL,UAAU,OACVM,KAAK,KACLC,QAAS,WACPV,EAAoBtF,OAAO,CACzB7C,GAAIiI,EAAUJ,IACd9H,OAAQ,aAGVqI,IAAQU,UAZZ,wBAmBJ,mDACA,mCAAIb,QAAJ,IAAIA,OAAJ,EAAIA,EAAWc,mBACf,gDACA,4BAAId,EAAUe,WAEd,wDACA,4BAAIf,EAAUgB,uBAEd,2CACA,4BAAIhB,EAAUiB,WACd,0CACA,4BAAIjB,EAAUkB,UAEd,uDACA,4BAAIlB,EAAUmB,sBACd,8CACA,4BAAInB,EAAUoB,cACd,6CACA,4BAAIpB,EAAUqB","file":"static/js/15.4bdca44f.chunk.js","sourcesContent":["import AxiosBase from \"../config/AxiosBase\";\r\n\r\nconst token = localStorage.adminToken;\r\nconst headerToken = {\r\n  headers: {\r\n    \"x-access-token\": token,\r\n  },\r\n};\r\n\r\n// dashboard api\r\nexport const getDashboardCounts = () => {\r\n  return AxiosBase.get(`/admin/counts`, headerToken);\r\n};\r\n\r\n// patient api\r\nexport const getPatients = () => {\r\n  return AxiosBase.get(`/admin/all-patients`, headerToken);\r\n};\r\n\r\nexport const deactiveUser = ({ status, id }) => {\r\n  return AxiosBase.put(`/admin/deactive-user/${id}`, { status }, headerToken);\r\n};\r\n\r\n// doctor api\r\nexport const activeDoctors = () => {\r\n  return AxiosBase.get(`/admin/active-doctors`, headerToken);\r\n};\r\nexport const pendingDoctors = () => {\r\n  return AxiosBase.get(`/admin/pending-doctors`, headerToken);\r\n};\r\nexport const declinedDoctors = () => {\r\n  return AxiosBase.get(`/admin/declined-doctors`, headerToken);\r\n};\r\n\r\n// doctor form\r\nexport const approveDocForm = (docformId) => {\r\n  console.log(docformId);\r\n  return AxiosBase.put(`/admin/approve-doc-form/${docformId}`, {}, headerToken);\r\n};\r\nexport const declineDocForm = (docformId) => {\r\n  console.log(docformId);\r\n  return AxiosBase.put(`/admin/decline-doc-form/${docformId}`, {}, headerToken);\r\n};\r\n\r\n// insurance\r\n\r\nexport const verifiedInsurance = () => {\r\n  return AxiosBase.get(`/insurance/form?status=accepted`, headerToken);\r\n};\r\nexport const pendingInsurance = () => {\r\n  return AxiosBase.get(`/insurance/form?status=pending`, headerToken);\r\n};\r\nexport const rejectedInsurance = () => {\r\n  return AxiosBase.get(`/insurance/form?status=rejected`, headerToken);\r\n};\r\nexport const updateInsurance = ({ id, status }) => {\r\n  return AxiosBase.put(`/insurance/form/${id}`, { status }, headerToken);\r\n};\r\n\r\n// speciality api\r\nexport const getAllSpecialities = () => {\r\n  return AxiosBase.get(`/admin/all-speciality`, headerToken);\r\n};\r\nexport const addNewSpeciality = ({ formData }) => {\r\n  return AxiosBase.post(`/admin/new-speciality`, formData, headerToken);\r\n};\r\nexport const deleteSpeciality = (specialityId) => {\r\n  return AxiosBase.delete(\r\n    `/admin/delete-speciality/${specialityId}`,\r\n    headerToken\r\n  );\r\n};\r\nexport const updateSpeciality = ({ data, id }) => {\r\n  return AxiosBase.put(`/admin/update-speciality/${id}`, data, headerToken);\r\n};\r\n\r\n// language api\r\nexport const getAllLanguages = () => {\r\n  return AxiosBase.get(`/admin/all-languages`, headerToken);\r\n};\r\nexport const addNewLanguage = (name) => {\r\n  return AxiosBase.post(`/admin/new-language`, name, headerToken);\r\n};\r\nexport const deleteLanguage = (languageId) => {\r\n  console.log(languageId);\r\n  return AxiosBase.delete(`/admin/delete-language/${languageId}`, headerToken);\r\n};\r\n\r\n// setting\r\nexport const updatePassword = (data) => {\r\n  return AxiosBase.post(`/admin/update-password`, data, headerToken);\r\n};\r\n\r\nexport const allConsultations = () => {\r\n  return AxiosBase.get(`/admin/all-consultations`, headerToken);\r\n};\r\n\r\nexport const allAppointments = () => {\r\n  return AxiosBase.get(`/admin/all-appointments`, headerToken);\r\n};\r\n\r\n// social\r\nexport const updateSocial = (data) => {\r\n  return AxiosBase.post(`/admin/update-social-links`, data, headerToken);\r\n};\r\nexport const getSocial = () => {\r\n  return AxiosBase.get(`/admin/get-social-links`, headerToken);\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    this.currentResult = _extends({}, state, {\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    });\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && obsRef.current.options.useErrorBoundary) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}","import { useMutation, useQueryClient } from \"react-query\";\r\n\r\nexport const useDeleteItemMutataion = (queryFn, queryKey) => {\r\n  const queryClient = useQueryClient();\r\n  const queryMutation = useMutation(queryFn, {\r\n    // When mutate is called:\r\n    onMutate: async ({ id }) => {\r\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\r\n      await queryClient.cancelQueries(queryKey);\r\n\r\n      // Snapshot the previous value\r\n      const previousData = queryClient.getQueryData(queryKey);\r\n\r\n      // Optimistically update to the new value\r\n      queryClient.setQueryData(queryKey, (old) => {\r\n        let cloneData = old;\r\n        let filterData = old.data.filter((el) => el._id !== id);\r\n        cloneData.data = filterData;\r\n        return cloneData;\r\n      });\r\n\r\n      // Return a context object with the snapshotted value\r\n      return { previousData };\r\n    },\r\n    // If the mutation fails, use the context returned from onMutate to roll back\r\n    onError: (err, id, context) => {\r\n      queryClient.setQueryData(queryKey, context.previousData);\r\n    },\r\n    // Always refetch after error or success:\r\n    onSettled: () => {\r\n      queryClient.invalidateQueries(queryKey);\r\n    },\r\n  });\r\n\r\n  return queryMutation;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport history from \"../../../config/history\";\r\nimport { CButton } from \"@coreui/react\";\r\nimport { useDeleteItemMutataion } from \"../../../query/mutations\";\r\nimport { updateInsurance } from \"../../../containers/ApiFun\";\r\nexport default function InsuranceDetail() {\r\n  const propsData = useLocation().state;\r\n  const { status } = propsData;\r\n  console.log(propsData);\r\n\r\n  const updateInsuranceForm = useDeleteItemMutataion(\r\n    updateInsurance,\r\n    status === \"pending\"\r\n      ? \"PendingInsurance\"\r\n      : status === \"accepted\"\r\n      ? \"ActiveInsurance\"\r\n      : \"RejectedInsurance\"\r\n  );\r\n  useEffect(() => {\r\n    if (propsData === undefined) history.push(\"/admin/insurance/form/active\");\r\n  }, []);\r\n  return (\r\n    <div className=\"bg-white textBlack p-3 \">\r\n      <div className=\"textBlack\">\r\n        <h2 className=\"text-center py-3\">Insurance Detail</h2>\r\n        <br />\r\n        <div className=\"flexCenter\" style={{ justifyContent: \"flex-end\" }}>\r\n          {status === \"accepted\" || (\r\n            <CButton\r\n              color=\"warning\"\r\n              variant=\"outline\"\r\n              shape=\"pill\"\r\n              size=\"sm\"\r\n              className=\"text-noWrap\"\r\n              onClick={() => {\r\n                updateInsuranceForm.mutate({\r\n                  id: propsData._id,\r\n                  status: \"accepted\",\r\n                });\r\n                history.goBack();\r\n              }}\r\n            >\r\n              Approve\r\n            </CButton>\r\n          )}\r\n\r\n          {status === \"rejected\" || (\r\n            <CButton\r\n              color=\"danger\"\r\n              variant=\"outline\"\r\n              shape=\"pill\"\r\n              className=\"ml-2\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                updateInsuranceForm.mutate({\r\n                  id: propsData._id,\r\n                  status: \"rejected\",\r\n                });\r\n\r\n                history.goBack();\r\n              }}\r\n            >\r\n              Decline\r\n            </CButton>\r\n          )}\r\n        </div>\r\n        <h5>Insurance Company</h5>\r\n        <p>{propsData?.insuranceCompany}</p>\r\n        <h5>Insurance Plan</h5>\r\n        <p>{propsData.planName}</p>\r\n\r\n        <h5>Primary Insurance Name</h5>\r\n        <p>{propsData.primaryInsuranceName}</p>\r\n\r\n        <h5>Policy No</h5>\r\n        <p>{propsData.policyNo}</p>\r\n        <h5>Group No</h5>\r\n        <p>{propsData.groupNo}</p>\r\n\r\n        <h5>Primary Insurance DOB</h5>\r\n        <p>{propsData.primaryInsuranceDOB}</p>\r\n        <h5>Patient Name</h5>\r\n        <p>{propsData.patientName}</p>\r\n        <h5>Patient DOB</h5>\r\n        <p>{propsData.patientDOB}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}