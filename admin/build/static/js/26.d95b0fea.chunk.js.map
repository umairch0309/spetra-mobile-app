{"version":3,"sources":["containers/constants.js","views/pages/Doctor/AddDoctor.js"],"names":["languages","code","name","specialitiesOptions","AddTeacher","useState","setName","email","setEmail","contactNo","setContactNo","aboutMe","setAboutUs","lang","setLang","speciality","setSpeciality","education","setEducation","experince","setExperince","practices","setPracticies","hospital","setHospital","errors","setErrors","submit","setSubmit","loading","setLoading","useEffect","validate","length","Object","keys","onSubmit","a","postData","token","localStorage","adminToken","AxiosBase","post","headers","Swal","fire","title","icon","then","res","history","push","errorsMessage","response","data","message","className","md","lg","xl","TextField","margin","style","height","fullWidth","label","variant","value","onChange","e","target","error","helperText","Autocomplete","multiple","id","options","getOptionLabel","option","filterSelectedOptions","disableCloseOnSelect","v","renderInput","params","placeholder","multiline","rows","InputProps","type","endAdornment","InputAdornment","position","onAdd","chip","onDelete","index","filterArr","filter","el","handleDeleteEducation","handleDeletePractices","handleDeleteHospital","disabled","onClick","color","block"],"mappings":"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","file":"static/js/26.d95b0fea.chunk.js","sourcesContent":["const languages = [\n  { code: \"ab\", name: \"Abkhazian\" },\n  { code: \"aa\", name: \"Afar\" },\n  { code: \"af\", name: \"Afrikaans\" },\n  { code: \"ak\", name: \"Akan\" },\n  { code: \"sq\", name: \"Albanian\" },\n  { code: \"am\", name: \"Amharic\" },\n  { code: \"ar\", name: \"Arabic\" },\n  { code: \"an\", name: \"Aragonese\" },\n  { code: \"hy\", name: \"Armenian\" },\n  { code: \"as\", name: \"Assamese\" },\n  { code: \"av\", name: \"Avaric\" },\n  { code: \"ae\", name: \"Avestan\" },\n  { code: \"ay\", name: \"Aymara\" },\n  { code: \"az\", name: \"Azerbaijani\" },\n  { code: \"bm\", name: \"Bambara\" },\n  { code: \"ba\", name: \"Bashkir\" },\n  { code: \"eu\", name: \"Basque\" },\n  { code: \"be\", name: \"Belarusian\" },\n  { code: \"bn\", name: \"Bengali\" },\n  { code: \"bh\", name: \"Bihari languages\" },\n  { code: \"bi\", name: \"Bislama\" },\n  { code: \"bs\", name: \"Bosnian\" },\n  { code: \"br\", name: \"Breton\" },\n  { code: \"bg\", name: \"Bulgarian\" },\n  { code: \"my\", name: \"Burmese\" },\n  { code: \"ca\", name: \"Catalan, Valencian\" },\n  { code: \"km\", name: \"Central Khmer\" },\n  { code: \"ch\", name: \"Chamorro\" },\n  { code: \"ce\", name: \"Chechen\" },\n  { code: \"ny\", name: \"Chichewa, Chewa, Nyanja\" },\n  { code: \"zh\", name: \"Chinese\" },\n  { code: \"cu\", name: \"Church Slavonic, Old Bulgarian, Old Church Slavonic\" },\n  { code: \"cv\", name: \"Chuvash\" },\n  { code: \"kw\", name: \"Cornish\" },\n  { code: \"co\", name: \"Corsican\" },\n  { code: \"cr\", name: \"Cree\" },\n  { code: \"hr\", name: \"Croatian\" },\n  { code: \"cs\", name: \"Czech\" },\n  { code: \"da\", name: \"Danish\" },\n  { code: \"dv\", name: \"Divehi, Dhivehi, Maldivian\" },\n  { code: \"nl\", name: \"Dutch, Flemish\" },\n  { code: \"dz\", name: \"Dzongkha\" },\n  { code: \"en\", name: \"English\" },\n  { code: \"eo\", name: \"Esperanto\" },\n  { code: \"et\", name: \"Estonian\" },\n  { code: \"ee\", name: \"Ewe\" },\n  { code: \"fo\", name: \"Faroese\" },\n  { code: \"fj\", name: \"Fijian\" },\n  { code: \"fi\", name: \"Finnish\" },\n  { code: \"fr\", name: \"French\" },\n  { code: \"ff\", name: \"Fulah\" },\n  { code: \"gd\", name: \"Gaelic, Scottish Gaelic\" },\n  { code: \"gl\", name: \"Galician\" },\n  { code: \"lg\", name: \"Ganda\" },\n  { code: \"ka\", name: \"Georgian\" },\n  { code: \"de\", name: \"German\" },\n  { code: \"ki\", name: \"Gikuyu, Kikuyu\" },\n  { code: \"el\", name: \"Greek (Modern)\" },\n  { code: \"kl\", name: \"Greenlandic, Kalaallisut\" },\n  { code: \"gn\", name: \"Guarani\" },\n  { code: \"gu\", name: \"Gujarati\" },\n  { code: \"ht\", name: \"Haitian, Haitian Creole\" },\n  { code: \"ha\", name: \"Hausa\" },\n  { code: \"he\", name: \"Hebrew\" },\n  { code: \"hz\", name: \"Herero\" },\n  { code: \"hi\", name: \"Hindi\" },\n  { code: \"ho\", name: \"Hiri Motu\" },\n  { code: \"hu\", name: \"Hungarian\" },\n  { code: \"is\", name: \"Icelandic\" },\n  { code: \"io\", name: \"Ido\" },\n  { code: \"ig\", name: \"Igbo\" },\n  { code: \"id\", name: \"Indonesian\" },\n  {\n    code: \"ia\",\n    name: \"Interlingua (International Auxiliary Language Association)\",\n  },\n  { code: \"ie\", name: \"Interlingue\" },\n  { code: \"iu\", name: \"Inuktitut\" },\n  { code: \"ik\", name: \"Inupiaq\" },\n  { code: \"ga\", name: \"Irish\" },\n  { code: \"it\", name: \"Italian\" },\n  { code: \"ja\", name: \"Japanese\" },\n  { code: \"jv\", name: \"Javanese\" },\n  { code: \"kn\", name: \"Kannada\" },\n  { code: \"kr\", name: \"Kanuri\" },\n  { code: \"ks\", name: \"Kashmiri\" },\n  { code: \"kk\", name: \"Kazakh\" },\n  { code: \"rw\", name: \"Kinyarwanda\" },\n  { code: \"kv\", name: \"Komi\" },\n  { code: \"kg\", name: \"Kongo\" },\n  { code: \"ko\", name: \"Korean\" },\n  { code: \"kj\", name: \"Kwanyama, Kuanyama\" },\n  { code: \"ku\", name: \"Kurdish\" },\n  { code: \"ky\", name: \"Kyrgyz\" },\n  { code: \"lo\", name: \"Lao\" },\n  { code: \"la\", name: \"Latin\" },\n  { code: \"lv\", name: \"Latvian\" },\n  { code: \"lb\", name: \"Letzeburgesch, Luxembourgish\" },\n  { code: \"li\", name: \"Limburgish, Limburgan, Limburger\" },\n  { code: \"ln\", name: \"Lingala\" },\n  { code: \"lt\", name: \"Lithuanian\" },\n  { code: \"lu\", name: \"Luba-Katanga\" },\n  { code: \"mk\", name: \"Macedonian\" },\n  { code: \"mg\", name: \"Malagasy\" },\n  { code: \"ms\", name: \"Malay\" },\n  { code: \"ml\", name: \"Malayalam\" },\n  { code: \"mt\", name: \"Maltese\" },\n  { code: \"gv\", name: \"Manx\" },\n  { code: \"mi\", name: \"Maori\" },\n  { code: \"mr\", name: \"Marathi\" },\n  { code: \"mh\", name: \"Marshallese\" },\n  { code: \"ro\", name: \"Moldovan, Moldavian, Romanian\" },\n  { code: \"mn\", name: \"Mongolian\" },\n  { code: \"na\", name: \"Nauru\" },\n  { code: \"nv\", name: \"Navajo, Navaho\" },\n  { code: \"nd\", name: \"Northern Ndebele\" },\n  { code: \"ng\", name: \"Ndonga\" },\n  { code: \"ne\", name: \"Nepali\" },\n  { code: \"se\", name: \"Northern Sami\" },\n  { code: \"no\", name: \"Norwegian\" },\n  { code: \"nb\", name: \"Norwegian Bokmål\" },\n  { code: \"nn\", name: \"Norwegian Nynorsk\" },\n  { code: \"ii\", name: \"Nuosu, Sichuan Yi\" },\n  { code: \"oc\", name: \"Occitan (post 1500)\" },\n  { code: \"oj\", name: \"Ojibwa\" },\n  { code: \"or\", name: \"Oriya\" },\n  { code: \"om\", name: \"Oromo\" },\n  { code: \"os\", name: \"Ossetian, Ossetic\" },\n  { code: \"pi\", name: \"Pali\" },\n  { code: \"pa\", name: \"Panjabi, Punjabi\" },\n  { code: \"ps\", name: \"Pashto, Pushto\" },\n  { code: \"fa\", name: \"Persian\" },\n  { code: \"pl\", name: \"Polish\" },\n  { code: \"pt\", name: \"Portuguese\" },\n  { code: \"qu\", name: \"Quechua\" },\n  { code: \"rm\", name: \"Romansh\" },\n  { code: \"rn\", name: \"Rundi\" },\n  { code: \"ru\", name: \"Russian\" },\n  { code: \"sm\", name: \"Samoan\" },\n  { code: \"sg\", name: \"Sango\" },\n  { code: \"sa\", name: \"Sanskrit\" },\n  { code: \"sc\", name: \"Sardinian\" },\n  { code: \"sr\", name: \"Serbian\" },\n  { code: \"sn\", name: \"Shona\" },\n  { code: \"sd\", name: \"Sindhi\" },\n  { code: \"si\", name: \"Sinhala, Sinhalese\" },\n  { code: \"sk\", name: \"Slovak\" },\n  { code: \"sl\", name: \"Slovenian\" },\n  { code: \"so\", name: \"Somali\" },\n  { code: \"st\", name: \"Sotho, Southern\" },\n  { code: \"nr\", name: \"South Ndebele\" },\n  { code: \"es\", name: \"Spanish, Castilian\" },\n  { code: \"su\", name: \"Sundanese\" },\n  { code: \"sw\", name: \"Swahili\" },\n  { code: \"ss\", name: \"Swati\" },\n  { code: \"sv\", name: \"Swedish\" },\n  { code: \"tl\", name: \"Tagalog\" },\n  { code: \"ty\", name: \"Tahitian\" },\n  { code: \"tg\", name: \"Tajik\" },\n  { code: \"ta\", name: \"Tamil\" },\n  { code: \"tt\", name: \"Tatar\" },\n  { code: \"te\", name: \"Telugu\" },\n  { code: \"th\", name: \"Thai\" },\n  { code: \"bo\", name: \"Tibetan\" },\n  { code: \"ti\", name: \"Tigrinya\" },\n  { code: \"to\", name: \"Tonga (Tonga Islands)\" },\n  { code: \"ts\", name: \"Tsonga\" },\n  { code: \"tn\", name: \"Tswana\" },\n  { code: \"tr\", name: \"Turkish\" },\n  { code: \"tk\", name: \"Turkmen\" },\n  { code: \"tw\", name: \"Twi\" },\n  { code: \"ug\", name: \"Uighur, Uyghur\" },\n  { code: \"uk\", name: \"Ukrainian\" },\n  { code: \"ur\", name: \"Urdu\" },\n  { code: \"uz\", name: \"Uzbek\" },\n  { code: \"ve\", name: \"Venda\" },\n  { code: \"vi\", name: \"Vietnamese\" },\n  { code: \"vo\", name: \"Volap_k\" },\n  { code: \"wa\", name: \"Walloon\" },\n  { code: \"cy\", name: \"Welsh\" },\n  { code: \"fy\", name: \"Western Frisian\" },\n  { code: \"wo\", name: \"Wolof\" },\n  { code: \"xh\", name: \"Xhosa\" },\n  { code: \"yi\", name: \"Yiddish\" },\n  { code: \"yo\", name: \"Yoruba\" },\n  { code: \"za\", name: \"Zhuang, Chuang\" },\n  { code: \"zu\", name: \"Zulu\" },\n];\n\nconst specialitiesOptions = [\n  \"Primary Care Physician (PCP)\",\n  \"OB-GYN (Obstetrician-Gynecologist)\",\n  \"Dermatologist\",\n  \"Dentist\",\n  \"Ear, Nose & Throat Doctor (ENT / Otolaryngologist)\",\n  \"Eye Doctor\",\n  \"Psychiatrist\",\n  \"Orthopedic Surgeon (Orthopedist)\",\n  \"Acupuncturist\",\n  \"Allergist (Immunologist)\",\n  \"Audiologist\",\n  \"Cardiologist (Heart Doctor)\",\n  \"Cardiothoracic Surgeon\",\n  \"Chiropractor\",\n  \"Colorectal Surgeon\",\n  \"Dentist\",\n  \"Dermatologist\",\n  \"Dietitian / Nutritionist\",\n  \"Ear, Nose & Throat Doctor (ENT / Otolaryngologist)\",\n  \"Endocrinologist (incl Diabetes Specialists)\",\n  \"Eye Doctor\",\n  \"Gastroenterologist\",\n  \"Geriatrician\",\n  \"Hearing Specialist\",\n  \"Hematologist (Blood Specialist)\",\n  \"Infectious Disease Specialist\",\n  \"Infertility Specialist\",\n  \"Midwife\",\n  \"Naturopathic Doctor\",\n  \"Nephrologist (Kidney Specialist)\",\n  \"Neurologist (incl Headache Specialists)\",\n  \"Neurosurgeon\",\n  \"OB-GYN (Obstetrician-Gynecologist)\",\n  \"Oncologist\",\n  \"Ophthalmologist\",\n  \"Optometrist\",\n  \"Oral Surgeon\",\n  \"Orthodontist\",\n  \"Orthopedic Surgeon (Orthopedist)\",\n  \"Pain Management Specialist\",\n  \"Pediatric Dentist\",\n  \"Pediatrician\",\n  \"Physiatrist (Physical Medicine)\",\n  \"Physical Therapist\",\n  \"Plastic Surgeon\",\n  \"Podiatrist (Foot and Ankle Specialist)\",\n  \"Primary Care Physician (PCP)\",\n  \"Prosthodontist\",\n  \"Psychiatrist\",\n  \"Psychologist\",\n  \"Pulmonologist (Lung Doctor)\",\n  \"Radiologist\",\n  \"Rheumatologist\",\n  \"Sleep Medicine Specialist\",\n  \"Sports Medicine Specialist\",\n  \"Surgeon\",\n  \"Therapist / Counselor\",\n  \"Urgent Care Specialist\",\n  \"Urological Surgeon\",\n  \"Urologist\",\n  \"Vascular Surgeon\",\n  \"Endodontist\",\n  \"Periodontist\",\n];\nexport { languages, specialitiesOptions };\n","import { TextField, InputAdornment } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport AxiosBase from \"../../../config/AxiosBase\";\nimport Swal from \"sweetalert2\";\nimport history from \"../../../config/history\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { languages, specialitiesOptions } from \"../../../containers/constants\";\n\nconst AddTeacher = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contactNo, setContactNo] = useState(\"\");\n  const [aboutMe, setAboutUs] = useState(\"\");\n  const [lang, setLang] = useState([]);\n  const [speciality, setSpeciality] = useState([]);\n  const [education, setEducation] = useState([]);\n  const [experince, setExperince] = useState(\"\");\n  const [practices, setPracticies] = useState([]);\n  const [hospital, setHospital] = useState([]);\n\n  const [errors, setErrors] = useState({});\n  const [submit, setSubmit] = useState(false);\n  // loading\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    submit && validate();\n  }, [\n    name,\n    email,\n    contactNo,\n    aboutMe,\n    lang,\n    speciality,\n    education,\n    experince,\n    practices,\n    hospital,\n  ]);\n\n  //   multichip handlers\n\n  const handleAddEducation = (v) => {\n    setEducation([...education, v]);\n  };\n  const handleDeleteEducation = (v, index) => {\n    const filterArr = education.filter((el) => el !== v);\n    setEducation(filterArr);\n  };\n  const handleAddPractices = (v) => {\n    setPracticies([...practices, v]);\n  };\n  const handleDeletePractices = (v, index) => {\n    const filterArr = practices.filter((el) => el !== v);\n    setPracticies(filterArr);\n  };\n  const handleAddHospital = (v) => {\n    setHospital([...hospital, v]);\n  };\n  const handleDeleteHospital = (v, index) => {\n    const filterArr = hospital.filter((el) => el !== v);\n    setHospital(filterArr);\n  };\n\n  // validates the forms\n  const validate = () => {\n    let errors = {};\n\n    if (!name) errors.name = \"Name is required\";\n    if (!email) errors.email = \"Email is required\";\n    if (!contactNo) errors.contactNo = \"NPi number is required\";\n    if (!aboutMe) errors.aboutMe = \"About yourself is required\";\n    if (!experince) errors.experince = \"Experince is required\";\n    if (lang?.length === 0)\n      errors.lang = \"At least one language detail is required\";\n    if (speciality?.length === 0)\n      errors.speciality = \"At least one speciality detail is required\";\n    if (education?.length === 0)\n      errors.education = \"At least one education detail is required\";\n    if (practices?.length === 0)\n      errors.practices = \"At least one practices detail is required\";\n    if (hospital?.length === 0)\n      errors.hospital = \"At least one hosipital affilation detail is required\";\n\n    setErrors(errors);\n    const validity = Object.keys(errors).length > 0;\n    return validity;\n  };\n\n  // onsubmiting form\n\n  const onSubmit = async () => {\n    setSubmit(true);\n    const validity = validate();\n    if (validity) return;\n    const postData = {\n      name,\n      email,\n      contactNo,\n      aboutMe,\n      languages: lang,\n      speciality,\n      education,\n      experince,\n      practices,\n      hospital,\n    };\n    setLoading(true);\n    const token = localStorage.adminToken;\n    try {\n      await AxiosBase.post(\"/admin/new-doctor\", postData, {\n        headers: {\n          \"x-access-token\": token,\n        },\n      });\n      Swal.fire({\n        title: \"Your request received successfully!\",\n        icon: \"success\",\n      }).then((res) => {\n        history.push(\"/admin/dashboard\");\n      });\n    } catch (error) {\n      Swal.fire({\n        title: \"Opps , there are some errors\",\n        icon: \"error\",\n      });\n      const errorsMessage = error?.response?.data?.message;\n\n      if (errorsMessage) setErrors({ email: errorsMessage });\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Add Doctor Account</h1>\n                  <p className=\"text-muted\">Create new account for Teacher</p>\n\n                  <TextField\n                    margin=\"dense\"\n                    style={{ height: 55 }}\n                    fullWidth\n                    label=\"Name\"\n                    variant={\"outlined\"}\n                    className=\"textInput\"\n                    value={name}\n                    name=\"name\"\n                    onChange={(e) => setName(e.target.value)}\n                    error={errors?.name && true}\n                    helperText={errors?.name}\n                  />\n\n                  <TextField\n                    margin=\"dense\"\n                    style={{ height: 55 }}\n                    fullWidth\n                    label=\"Email\"\n                    name=\"email\"\n                    variant={\"outlined\"}\n                    className=\"textInput\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    error={errors?.email && true}\n                    helperText={errors?.email}\n                  />\n\n                  <TextField\n                    margin=\"dense\"\n                    style={{ height: 55 }}\n                    fullWidth\n                    label=\"NPI number\"\n                    name=\"number\"\n                    variant={\"outlined\"}\n                    className=\"textInput\"\n                    value={contactNo}\n                    onChange={(e) => setContactNo(e.target.value)}\n                    error={errors?.contactNo && true}\n                    helperText={errors?.contactNo}\n                  />\n\n                  <Autocomplete\n                    multiple\n                    id=\"tags-outlined\"\n                    options={languages}\n                    value={lang}\n                    getOptionLabel={(option) => option.name}\n                    filterSelectedOptions\n                    disableCloseOnSelect\n                    onChange={(e, v) => setLang(v)}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        error={errors?.lang && true}\n                        helperText={errors?.lang}\n                        className=\"textInput mt-2\"\n                        label=\"languages\"\n                        variant=\"outlined\"\n                        placeholder=\"Languages\"\n                      />\n                    )}\n                  />\n                  <br />\n                  <TextField\n                    multiline\n                    label=\"About yourslef\"\n                    fullWidth\n                    rows={4}\n                    variant={\"outlined\"}\n                    value={aboutMe}\n                    className=\"textInput \"\n                    InputProps={{ style: { height: \"auto\" } }}\n                    onChange={(e) => setAboutUs(e.target.value)}\n                    error={errors?.aboutMe && true}\n                    helperText={errors?.aboutMe}\n                  />\n                  <br />\n                  <br />\n                  <h4 className=\"settitngLabel\">Education & background</h4>\n                  <br />\n                  <h6 className=\"settitngSubLabel\">Specialty & experience</h6>\n\n                  <Autocomplete\n                    id=\"tags-outlined\"\n                    options={specialitiesOptions}\n                    value={speciality}\n                    getOptionLabel={(option) => option}\n                    onChange={(e, v) => setSpeciality(v)}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        error={errors?.speciality && true}\n                        helperText={errors?.speciality}\n                        className=\"textInput mt-2\"\n                        label=\"Primary Speciality\"\n                        variant=\"outlined\"\n                        placeholder=\"Primary Speciality\"\n                      />\n                    )}\n                  />\n\n                  <TextField\n                    margin=\"dense\"\n                    style={{ height: 60 }}\n                    fullWidth\n                    label=\"Experince (years)\"\n                    InputProps={{\n                      type: \"number\",\n                      endAdornment: (\n                        <InputAdornment position=\"end\">Year</InputAdornment>\n                      ),\n                    }}\n                    value={experince}\n                    variant={\"outlined\"}\n                    className=\"textInput\"\n                    onChange={(e) => setExperince(e.target.value)}\n                    error={errors?.experince && true}\n                    helperText={errors?.experince}\n                  />\n                  <h6 className=\"settitngSubLabel\">Education & training</h6>\n\n                  <ChipInput\n                    className=\"textInput\"\n                    placeholder=\"Add multiple Education Details\"\n                    fullWidth\n                    variant={\"outlined\"}\n                    value={education}\n                    onAdd={(chip) => handleAddEducation(chip)}\n                    onDelete={(chip, index) =>\n                      handleDeleteEducation(chip, index)\n                    }\n                    error={errors?.education && true}\n                    helperText={errors?.education}\n                  />\n                  <br />\n                  <br />\n                  <h6 className=\"settitngSubLabel\">Practice names</h6>\n                  <ChipInput\n                    className=\"textInput\"\n                    placeholder=\"Add multiple Practice names\"\n                    fullWidth\n                    variant={\"outlined\"}\n                    value={practices}\n                    onAdd={(chip) => handleAddPractices(chip)}\n                    onDelete={(chip, index) =>\n                      handleDeletePractices(chip, index)\n                    }\n                    error={errors?.practices && true}\n                    helperText={errors?.practices}\n                  />\n                  <br />\n                  <br />\n                  <h6 className=\"settitngSubLabel\">Hospital affiliations</h6>\n                  <ChipInput\n                    className=\"textInput\"\n                    placeholder=\"Add multiple Hospital affiliations\"\n                    fullWidth\n                    variant={\"outlined\"}\n                    value={hospital}\n                    onAdd={(chip) => handleAddHospital(chip)}\n                    onDelete={(chip, index) =>\n                      handleDeleteHospital(chip, index)\n                    }\n                    error={errors?.hospital && true}\n                    helperText={errors?.hospital}\n                  />\n                  <br />\n                  <br />\n\n                  <CButton\n                    disabled={loading}\n                    className=\"mt-3\"\n                    onClick={onSubmit}\n                    color=\"success\"\n                    block\n                    type=\"button\"\n                  >\n                    Submit\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default AddTeacher;\n"],"sourceRoot":""}