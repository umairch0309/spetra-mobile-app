{"version":3,"sources":["containers/constants.js","views/pages/Doctor/AddDoctor.js"],"names":["languages","code","name","specialitiesOptions","AddTeacher","useState","setName","email","setEmail","contactNo","setContactNo","aboutMe","setAboutUs","lang","setLang","speciality","setSpeciality","education","setEducation","experince","setExperince","practices","setPracticies","hospital","setHospital","errors","setErrors","submit","setSubmit","loading","setLoading","useEffect","validate","length","Object","keys","onSubmit","a","postData","token","localStorage","adminToken","AxiosBase","post","headers","Swal","fire","title","icon","then","res","history","push","errorsMessage","response","data","message","className","md","lg","xl","TextField","margin","style","height","fullWidth","label","variant","value","onChange","e","target","error","helperText","Autocomplete","multiple","id","options","getOptionLabel","option","filterSelectedOptions","disableCloseOnSelect","v","renderInput","params","placeholder","multiline","rows","InputProps","type","endAdornment","InputAdornment","position","onAdd","chip","onDelete","index","filterArr","filter","el","handleDeleteEducation","handleDeletePractices","handleDeleteHospital","disabled","onClick","color","block"],"mappings":"wQAAMA,EAAY,CAChB,CAAEC,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,eACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,cACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,oBACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,sBACpB,CAAED,KAAM,KAAMC,KAAM,iBACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,2BACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,uDACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,8BACpB,CAAED,KAAM,KAAMC,KAAM,kBACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,OACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,2BACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,kBACpB,CAAED,KAAM,KAAMC,KAAM,kBACpB,CAAED,KAAM,KAAMC,KAAM,4BACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,2BACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,OACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,cACpB,CACED,KAAM,KACNC,KAAM,8DAER,CAAED,KAAM,KAAMC,KAAM,eACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,eACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,sBACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,OACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,gCACpB,CAAED,KAAM,KAAMC,KAAM,oCACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,cACpB,CAAED,KAAM,KAAMC,KAAM,gBACpB,CAAED,KAAM,KAAMC,KAAM,cACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,eACpB,CAAED,KAAM,KAAMC,KAAM,iCACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,kBACpB,CAAED,KAAM,KAAMC,KAAM,oBACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,iBACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,uBACpB,CAAED,KAAM,KAAMC,KAAM,qBACpB,CAAED,KAAM,KAAMC,KAAM,qBACpB,CAAED,KAAM,KAAMC,KAAM,uBACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,qBACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,oBACpB,CAAED,KAAM,KAAMC,KAAM,kBACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,cACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,sBACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,mBACpB,CAAED,KAAM,KAAMC,KAAM,iBACpB,CAAED,KAAM,KAAMC,KAAM,sBACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,YACpB,CAAED,KAAM,KAAMC,KAAM,yBACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,OACpB,CAAED,KAAM,KAAMC,KAAM,kBACpB,CAAED,KAAM,KAAMC,KAAM,aACpB,CAAED,KAAM,KAAMC,KAAM,QACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,cACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,mBACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,SACpB,CAAED,KAAM,KAAMC,KAAM,WACpB,CAAED,KAAM,KAAMC,KAAM,UACpB,CAAED,KAAM,KAAMC,KAAM,kBACpB,CAAED,KAAM,KAAMC,KAAM,SAGhBC,EAAsB,CAC1B,+BACA,qCACA,gBACA,UACA,qDACA,aACA,eACA,mCACA,gBACA,2BACA,cACA,8BACA,yBACA,eACA,qBACA,UACA,gBACA,2BACA,qDACA,8CACA,aACA,qBACA,eACA,qBACA,kCACA,gCACA,yBACA,UACA,sBACA,mCACA,0CACA,eACA,qCACA,aACA,kBACA,cACA,eACA,eACA,mCACA,6BACA,oBACA,eACA,kCACA,qBACA,kBACA,yCACA,+BACA,iBACA,eACA,eACA,8BACA,cACA,iBACA,4BACA,6BACA,UACA,wBACA,yBACA,qBACA,YACA,mBACA,cACA,gB,QCgGaC,UAtUI,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOH,EAAP,KAAaI,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA8BL,mBAAS,IAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAwBP,mBAAS,IAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KACA,EAAoCT,mBAAS,IAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KACA,EAAkCX,mBAAS,IAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAAkCb,mBAAS,IAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAAmCf,mBAAS,IAA5C,mBAAOgB,EAAP,KAAkBC,EAAlB,KACA,EAAgCjB,mBAAS,IAAzC,oBAAOkB,GAAP,MAAiBC,GAAjB,MAEA,GAA4BnB,mBAAS,IAArC,qBAAOoB,GAAP,MAAeC,GAAf,MACA,GAA4BrB,oBAAS,GAArC,qBAAOsB,GAAP,MAAeC,GAAf,MAEA,GAA8BvB,oBAAS,GAAvC,qBAAOwB,GAAP,MAAgBC,GAAhB,MAEAC,qBAAU,WACRJ,IAAUK,OACT,CACD9B,EACAK,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,KAKF,IAuBMS,GAAW,WACf,IAAIP,EAAS,GAoBb,OAlBKvB,IAAMuB,EAAOvB,KAAO,oBACpBK,IAAOkB,EAAOlB,MAAQ,qBACtBE,IAAWgB,EAAOhB,UAAY,0BAC9BE,IAASc,EAAOd,QAAU,8BAC1BQ,IAAWM,EAAON,UAAY,yBACd,KAAb,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,UACRR,EAAOZ,KAAO,4CACW,KAAb,OAAVE,QAAU,IAAVA,OAAA,EAAAA,EAAYkB,UACdR,EAAOV,WAAa,8CACI,KAAb,OAATE,QAAS,IAATA,OAAA,EAAAA,EAAWgB,UACbR,EAAOR,UAAY,6CACK,KAAb,OAATI,QAAS,IAATA,OAAA,EAAAA,EAAWY,UACbR,EAAOJ,UAAY,6CACI,KAAb,OAARE,SAAQ,IAARA,QAAA,EAAAA,GAAUU,UACZR,EAAOF,SAAW,wDAEpBG,GAAUD,GACOS,OAAOC,KAAKV,GAAQQ,OAAS,GAM1CG,GAAQ,uCAAG,oCAAAC,EAAA,yDACfT,IAAU,IACOI,KAFF,wDAITM,EAAW,CACfpC,OACAK,QACAE,YACAE,UACAX,UAAWa,EACXE,aACAE,YACAE,YACAE,YACAE,aAEFO,IAAW,GACLS,EAAQC,aAAaC,WAjBZ,mBAmBPC,IAAUC,KAAK,oBAAqBL,EAAU,CAClDM,QAAS,CACP,iBAAkBL,KArBT,QAwBbM,IAAKC,KAAK,CACRC,MAAO,sCACPC,KAAM,YACLC,MAAK,SAACC,GACPC,IAAQC,KAAK,uBA5BF,kDA+BbP,IAAKC,KAAK,CACRC,MAAO,+BACPC,KAAM,WAEFK,EAnCO,sCAmCS,KAAOC,gBAnChB,iBAmCS,EAAiBC,YAnC1B,aAmCS,EAAuBC,UAE1B9B,GAAU,CAAEnB,MAAO8C,IArCzB,QAuCfvB,IAAW,GAvCI,0DAAH,qDA0Cd,OACE,qBAAK2B,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvB,SACE,cAAC,IAAD,CAAOH,UAAU,OAAjB,SACE,cAAC,IAAD,CAAWA,UAAU,MAArB,SACE,eAAC,IAAD,WACE,oDACA,mBAAGA,UAAU,aAAb,4CAEA,cAACI,EAAA,EAAD,CACEC,OAAO,QACPC,MAAO,CAAEC,OAAQ,IACjBC,WAAS,EACTC,MAAM,OACNC,QAAS,WACTV,UAAU,YACVW,MAAOlE,EACPA,KAAK,OACLmE,SAAU,SAACC,GAAD,OAAOhE,EAAQgE,EAAEC,OAAOH,QAClCI,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQvB,QAAQ,EACvBuE,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQvB,OAGtB,cAAC2D,EAAA,EAAD,CACEC,OAAO,QACPC,MAAO,CAAEC,OAAQ,IACjBC,WAAS,EACTC,MAAM,QACNhE,KAAK,QACLiE,QAAS,WACTV,UAAU,YACVW,MAAO7D,EACP8D,SAAU,SAACC,GAAD,OAAO9D,EAAS8D,EAAEC,OAAOH,QACnCI,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQlB,SAAS,EACxBkE,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQlB,QAGtB,cAACsD,EAAA,EAAD,CACEC,OAAO,QACPC,MAAO,CAAEC,OAAQ,IACjBC,WAAS,EACTC,MAAM,aACNhE,KAAK,SACLiE,QAAS,WACTV,UAAU,YACVW,MAAO3D,EACP4D,SAAU,SAACC,GAAD,OAAO5D,EAAa4D,EAAEC,OAAOH,QACvCI,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQhB,aAAa,EAC5BgE,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQhB,YAGtB,cAACiE,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,gBACHC,QAAS7E,EACToE,MAAOvD,EACPiE,eAAgB,SAACC,GAAD,OAAYA,EAAO7E,MACnC8E,uBAAqB,EACrBC,sBAAoB,EACpBZ,SAAU,SAACC,EAAGY,GAAJ,OAAUpE,EAAQoE,IAC5BC,YAAa,SAACC,GAAD,OACX,cAACvB,EAAA,EAAD,2BACMuB,GADN,IAEEZ,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQZ,QAAQ,EACvB4D,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQZ,KACpB4C,UAAU,iBACVS,MAAM,YACNC,QAAQ,WACRkB,YAAY,kBAIlB,uBACA,cAACxB,EAAA,EAAD,CACEyB,WAAS,EACTpB,MAAM,iBACND,WAAS,EACTsB,KAAM,EACNpB,QAAS,WACTC,MAAOzD,EACP8C,UAAU,aACV+B,WAAY,CAAEzB,MAAO,CAAEC,OAAQ,SAC/BK,SAAU,SAACC,GAAD,OAAO1D,EAAW0D,EAAEC,OAAOH,QACrCI,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQd,WAAW,EAC1B8D,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQd,UAEtB,uBACA,uBACA,oBAAI8C,UAAU,gBAAd,oCACA,uBACA,oBAAIA,UAAU,mBAAd,oCAEA,cAACiB,EAAA,EAAD,CACEE,GAAG,gBACHC,QAAS1E,EACTiE,MAAOrD,EACP+D,eAAgB,SAACC,GAAD,OAAYA,GAC5BV,SAAU,SAACC,EAAGY,GAAJ,OAAUlE,EAAckE,IAClCC,YAAa,SAACC,GAAD,OACX,cAACvB,EAAA,EAAD,2BACMuB,GADN,IAEEZ,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQV,cAAc,EAC7B0D,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQV,WACpB0C,UAAU,iBACVS,MAAM,qBACNC,QAAQ,WACRkB,YAAY,2BAKlB,cAACxB,EAAA,EAAD,CACEC,OAAO,QACPC,MAAO,CAAEC,OAAQ,IACjBC,WAAS,EACTC,MAAM,oBACNsB,WAAY,CACVC,KAAM,SACNC,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,mBAGJxB,MAAOjD,EACPgD,QAAS,WACTV,UAAU,YACVY,SAAU,SAACC,GAAD,OAAOlD,EAAakD,EAAEC,OAAOH,QACvCI,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQN,aAAa,EAC5BsD,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQN,YAEtB,oBAAIsC,UAAU,mBAAd,kCAEA,cAAC,IAAD,CACEA,UAAU,YACV4B,YAAY,iCACZpB,WAAS,EACTE,QAAS,WACTC,MAAOnD,EACP4E,MAAO,SAACC,GAAD,OAtOGZ,EAsO0BY,OArOpD5E,EAAa,GAAD,mBAAKD,GAAL,CAAgBiE,KADH,IAACA,GAuOVa,SAAU,SAACD,EAAME,GAAP,OApOE,SAACd,EAAGc,GAChC,IAAMC,EAAYhF,EAAUiF,QAAO,SAACC,GAAD,OAAQA,IAAOjB,KAClDhE,EAAa+E,GAmOKG,CAAsBN,IAExBtB,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQR,aAAa,EAC5BwD,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQR,YAEtB,uBACA,uBACA,oBAAIwC,UAAU,mBAAd,4BACA,cAAC,IAAD,CACEA,UAAU,YACV4B,YAAY,8BACZpB,WAAS,EACTE,QAAS,WACTC,MAAO/C,EACPwE,MAAO,SAACC,GAAD,OA/OGZ,EA+O0BY,OA9OpDxE,EAAc,GAAD,mBAAKD,GAAL,CAAgB6D,KADJ,IAACA,GAgPVa,SAAU,SAACD,EAAME,GAAP,OA7OE,SAACd,EAAGc,GAChC,IAAMC,EAAY5E,EAAU6E,QAAO,SAACC,GAAD,OAAQA,IAAOjB,KAClD5D,EAAc2E,GA4OII,CAAsBP,IAExBtB,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQJ,aAAa,EAC5BoD,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQJ,YAEtB,uBACA,uBACA,oBAAIoC,UAAU,mBAAd,mCACA,cAAC,IAAD,CACEA,UAAU,YACV4B,YAAY,qCACZpB,WAAS,EACTE,QAAS,WACTC,MAAO7C,GACPsE,MAAO,SAACC,GAAD,OAxPEZ,EAwP0BY,OAvPnDtE,GAAY,GAAD,mBAAKD,IAAL,CAAe2D,KADF,IAACA,GAyPTa,SAAU,SAACD,EAAME,GAAP,OAtPC,SAACd,EAAGc,GAC/B,IAAMC,EAAY1E,GAAS2E,QAAO,SAACC,GAAD,OAAQA,IAAOjB,KACjD1D,GAAYyE,GAqPMK,CAAqBR,IAEvBtB,OAAa,OAAN/C,SAAM,IAANA,QAAA,EAAAA,GAAQF,YAAY,EAC3BkD,WAAU,OAAEhD,SAAF,IAAEA,QAAF,EAAEA,GAAQF,WAEtB,uBACA,uBAEA,cAAC,IAAD,CACEgF,SAAU1E,GACV4B,UAAU,OACV+C,QAASpE,GACTqE,MAAM,UACNC,OAAK,EACLjB,KAAK,SANP","file":"static/js/26.2c045030.chunk.js","sourcesContent":["const languages = [\r\n  { code: \"ab\", name: \"Abkhazian\" },\r\n  { code: \"aa\", name: \"Afar\" },\r\n  { code: \"af\", name: \"Afrikaans\" },\r\n  { code: \"ak\", name: \"Akan\" },\r\n  { code: \"sq\", name: \"Albanian\" },\r\n  { code: \"am\", name: \"Amharic\" },\r\n  { code: \"ar\", name: \"Arabic\" },\r\n  { code: \"an\", name: \"Aragonese\" },\r\n  { code: \"hy\", name: \"Armenian\" },\r\n  { code: \"as\", name: \"Assamese\" },\r\n  { code: \"av\", name: \"Avaric\" },\r\n  { code: \"ae\", name: \"Avestan\" },\r\n  { code: \"ay\", name: \"Aymara\" },\r\n  { code: \"az\", name: \"Azerbaijani\" },\r\n  { code: \"bm\", name: \"Bambara\" },\r\n  { code: \"ba\", name: \"Bashkir\" },\r\n  { code: \"eu\", name: \"Basque\" },\r\n  { code: \"be\", name: \"Belarusian\" },\r\n  { code: \"bn\", name: \"Bengali\" },\r\n  { code: \"bh\", name: \"Bihari languages\" },\r\n  { code: \"bi\", name: \"Bislama\" },\r\n  { code: \"bs\", name: \"Bosnian\" },\r\n  { code: \"br\", name: \"Breton\" },\r\n  { code: \"bg\", name: \"Bulgarian\" },\r\n  { code: \"my\", name: \"Burmese\" },\r\n  { code: \"ca\", name: \"Catalan, Valencian\" },\r\n  { code: \"km\", name: \"Central Khmer\" },\r\n  { code: \"ch\", name: \"Chamorro\" },\r\n  { code: \"ce\", name: \"Chechen\" },\r\n  { code: \"ny\", name: \"Chichewa, Chewa, Nyanja\" },\r\n  { code: \"zh\", name: \"Chinese\" },\r\n  { code: \"cu\", name: \"Church Slavonic, Old Bulgarian, Old Church Slavonic\" },\r\n  { code: \"cv\", name: \"Chuvash\" },\r\n  { code: \"kw\", name: \"Cornish\" },\r\n  { code: \"co\", name: \"Corsican\" },\r\n  { code: \"cr\", name: \"Cree\" },\r\n  { code: \"hr\", name: \"Croatian\" },\r\n  { code: \"cs\", name: \"Czech\" },\r\n  { code: \"da\", name: \"Danish\" },\r\n  { code: \"dv\", name: \"Divehi, Dhivehi, Maldivian\" },\r\n  { code: \"nl\", name: \"Dutch, Flemish\" },\r\n  { code: \"dz\", name: \"Dzongkha\" },\r\n  { code: \"en\", name: \"English\" },\r\n  { code: \"eo\", name: \"Esperanto\" },\r\n  { code: \"et\", name: \"Estonian\" },\r\n  { code: \"ee\", name: \"Ewe\" },\r\n  { code: \"fo\", name: \"Faroese\" },\r\n  { code: \"fj\", name: \"Fijian\" },\r\n  { code: \"fi\", name: \"Finnish\" },\r\n  { code: \"fr\", name: \"French\" },\r\n  { code: \"ff\", name: \"Fulah\" },\r\n  { code: \"gd\", name: \"Gaelic, Scottish Gaelic\" },\r\n  { code: \"gl\", name: \"Galician\" },\r\n  { code: \"lg\", name: \"Ganda\" },\r\n  { code: \"ka\", name: \"Georgian\" },\r\n  { code: \"de\", name: \"German\" },\r\n  { code: \"ki\", name: \"Gikuyu, Kikuyu\" },\r\n  { code: \"el\", name: \"Greek (Modern)\" },\r\n  { code: \"kl\", name: \"Greenlandic, Kalaallisut\" },\r\n  { code: \"gn\", name: \"Guarani\" },\r\n  { code: \"gu\", name: \"Gujarati\" },\r\n  { code: \"ht\", name: \"Haitian, Haitian Creole\" },\r\n  { code: \"ha\", name: \"Hausa\" },\r\n  { code: \"he\", name: \"Hebrew\" },\r\n  { code: \"hz\", name: \"Herero\" },\r\n  { code: \"hi\", name: \"Hindi\" },\r\n  { code: \"ho\", name: \"Hiri Motu\" },\r\n  { code: \"hu\", name: \"Hungarian\" },\r\n  { code: \"is\", name: \"Icelandic\" },\r\n  { code: \"io\", name: \"Ido\" },\r\n  { code: \"ig\", name: \"Igbo\" },\r\n  { code: \"id\", name: \"Indonesian\" },\r\n  {\r\n    code: \"ia\",\r\n    name: \"Interlingua (International Auxiliary Language Association)\",\r\n  },\r\n  { code: \"ie\", name: \"Interlingue\" },\r\n  { code: \"iu\", name: \"Inuktitut\" },\r\n  { code: \"ik\", name: \"Inupiaq\" },\r\n  { code: \"ga\", name: \"Irish\" },\r\n  { code: \"it\", name: \"Italian\" },\r\n  { code: \"ja\", name: \"Japanese\" },\r\n  { code: \"jv\", name: \"Javanese\" },\r\n  { code: \"kn\", name: \"Kannada\" },\r\n  { code: \"kr\", name: \"Kanuri\" },\r\n  { code: \"ks\", name: \"Kashmiri\" },\r\n  { code: \"kk\", name: \"Kazakh\" },\r\n  { code: \"rw\", name: \"Kinyarwanda\" },\r\n  { code: \"kv\", name: \"Komi\" },\r\n  { code: \"kg\", name: \"Kongo\" },\r\n  { code: \"ko\", name: \"Korean\" },\r\n  { code: \"kj\", name: \"Kwanyama, Kuanyama\" },\r\n  { code: \"ku\", name: \"Kurdish\" },\r\n  { code: \"ky\", name: \"Kyrgyz\" },\r\n  { code: \"lo\", name: \"Lao\" },\r\n  { code: \"la\", name: \"Latin\" },\r\n  { code: \"lv\", name: \"Latvian\" },\r\n  { code: \"lb\", name: \"Letzeburgesch, Luxembourgish\" },\r\n  { code: \"li\", name: \"Limburgish, Limburgan, Limburger\" },\r\n  { code: \"ln\", name: \"Lingala\" },\r\n  { code: \"lt\", name: \"Lithuanian\" },\r\n  { code: \"lu\", name: \"Luba-Katanga\" },\r\n  { code: \"mk\", name: \"Macedonian\" },\r\n  { code: \"mg\", name: \"Malagasy\" },\r\n  { code: \"ms\", name: \"Malay\" },\r\n  { code: \"ml\", name: \"Malayalam\" },\r\n  { code: \"mt\", name: \"Maltese\" },\r\n  { code: \"gv\", name: \"Manx\" },\r\n  { code: \"mi\", name: \"Maori\" },\r\n  { code: \"mr\", name: \"Marathi\" },\r\n  { code: \"mh\", name: \"Marshallese\" },\r\n  { code: \"ro\", name: \"Moldovan, Moldavian, Romanian\" },\r\n  { code: \"mn\", name: \"Mongolian\" },\r\n  { code: \"na\", name: \"Nauru\" },\r\n  { code: \"nv\", name: \"Navajo, Navaho\" },\r\n  { code: \"nd\", name: \"Northern Ndebele\" },\r\n  { code: \"ng\", name: \"Ndonga\" },\r\n  { code: \"ne\", name: \"Nepali\" },\r\n  { code: \"se\", name: \"Northern Sami\" },\r\n  { code: \"no\", name: \"Norwegian\" },\r\n  { code: \"nb\", name: \"Norwegian Bokmål\" },\r\n  { code: \"nn\", name: \"Norwegian Nynorsk\" },\r\n  { code: \"ii\", name: \"Nuosu, Sichuan Yi\" },\r\n  { code: \"oc\", name: \"Occitan (post 1500)\" },\r\n  { code: \"oj\", name: \"Ojibwa\" },\r\n  { code: \"or\", name: \"Oriya\" },\r\n  { code: \"om\", name: \"Oromo\" },\r\n  { code: \"os\", name: \"Ossetian, Ossetic\" },\r\n  { code: \"pi\", name: \"Pali\" },\r\n  { code: \"pa\", name: \"Panjabi, Punjabi\" },\r\n  { code: \"ps\", name: \"Pashto, Pushto\" },\r\n  { code: \"fa\", name: \"Persian\" },\r\n  { code: \"pl\", name: \"Polish\" },\r\n  { code: \"pt\", name: \"Portuguese\" },\r\n  { code: \"qu\", name: \"Quechua\" },\r\n  { code: \"rm\", name: \"Romansh\" },\r\n  { code: \"rn\", name: \"Rundi\" },\r\n  { code: \"ru\", name: \"Russian\" },\r\n  { code: \"sm\", name: \"Samoan\" },\r\n  { code: \"sg\", name: \"Sango\" },\r\n  { code: \"sa\", name: \"Sanskrit\" },\r\n  { code: \"sc\", name: \"Sardinian\" },\r\n  { code: \"sr\", name: \"Serbian\" },\r\n  { code: \"sn\", name: \"Shona\" },\r\n  { code: \"sd\", name: \"Sindhi\" },\r\n  { code: \"si\", name: \"Sinhala, Sinhalese\" },\r\n  { code: \"sk\", name: \"Slovak\" },\r\n  { code: \"sl\", name: \"Slovenian\" },\r\n  { code: \"so\", name: \"Somali\" },\r\n  { code: \"st\", name: \"Sotho, Southern\" },\r\n  { code: \"nr\", name: \"South Ndebele\" },\r\n  { code: \"es\", name: \"Spanish, Castilian\" },\r\n  { code: \"su\", name: \"Sundanese\" },\r\n  { code: \"sw\", name: \"Swahili\" },\r\n  { code: \"ss\", name: \"Swati\" },\r\n  { code: \"sv\", name: \"Swedish\" },\r\n  { code: \"tl\", name: \"Tagalog\" },\r\n  { code: \"ty\", name: \"Tahitian\" },\r\n  { code: \"tg\", name: \"Tajik\" },\r\n  { code: \"ta\", name: \"Tamil\" },\r\n  { code: \"tt\", name: \"Tatar\" },\r\n  { code: \"te\", name: \"Telugu\" },\r\n  { code: \"th\", name: \"Thai\" },\r\n  { code: \"bo\", name: \"Tibetan\" },\r\n  { code: \"ti\", name: \"Tigrinya\" },\r\n  { code: \"to\", name: \"Tonga (Tonga Islands)\" },\r\n  { code: \"ts\", name: \"Tsonga\" },\r\n  { code: \"tn\", name: \"Tswana\" },\r\n  { code: \"tr\", name: \"Turkish\" },\r\n  { code: \"tk\", name: \"Turkmen\" },\r\n  { code: \"tw\", name: \"Twi\" },\r\n  { code: \"ug\", name: \"Uighur, Uyghur\" },\r\n  { code: \"uk\", name: \"Ukrainian\" },\r\n  { code: \"ur\", name: \"Urdu\" },\r\n  { code: \"uz\", name: \"Uzbek\" },\r\n  { code: \"ve\", name: \"Venda\" },\r\n  { code: \"vi\", name: \"Vietnamese\" },\r\n  { code: \"vo\", name: \"Volap_k\" },\r\n  { code: \"wa\", name: \"Walloon\" },\r\n  { code: \"cy\", name: \"Welsh\" },\r\n  { code: \"fy\", name: \"Western Frisian\" },\r\n  { code: \"wo\", name: \"Wolof\" },\r\n  { code: \"xh\", name: \"Xhosa\" },\r\n  { code: \"yi\", name: \"Yiddish\" },\r\n  { code: \"yo\", name: \"Yoruba\" },\r\n  { code: \"za\", name: \"Zhuang, Chuang\" },\r\n  { code: \"zu\", name: \"Zulu\" },\r\n];\r\n\r\nconst specialitiesOptions = [\r\n  \"Primary Care Physician (PCP)\",\r\n  \"OB-GYN (Obstetrician-Gynecologist)\",\r\n  \"Dermatologist\",\r\n  \"Dentist\",\r\n  \"Ear, Nose & Throat Doctor (ENT / Otolaryngologist)\",\r\n  \"Eye Doctor\",\r\n  \"Psychiatrist\",\r\n  \"Orthopedic Surgeon (Orthopedist)\",\r\n  \"Acupuncturist\",\r\n  \"Allergist (Immunologist)\",\r\n  \"Audiologist\",\r\n  \"Cardiologist (Heart Doctor)\",\r\n  \"Cardiothoracic Surgeon\",\r\n  \"Chiropractor\",\r\n  \"Colorectal Surgeon\",\r\n  \"Dentist\",\r\n  \"Dermatologist\",\r\n  \"Dietitian / Nutritionist\",\r\n  \"Ear, Nose & Throat Doctor (ENT / Otolaryngologist)\",\r\n  \"Endocrinologist (incl Diabetes Specialists)\",\r\n  \"Eye Doctor\",\r\n  \"Gastroenterologist\",\r\n  \"Geriatrician\",\r\n  \"Hearing Specialist\",\r\n  \"Hematologist (Blood Specialist)\",\r\n  \"Infectious Disease Specialist\",\r\n  \"Infertility Specialist\",\r\n  \"Midwife\",\r\n  \"Naturopathic Doctor\",\r\n  \"Nephrologist (Kidney Specialist)\",\r\n  \"Neurologist (incl Headache Specialists)\",\r\n  \"Neurosurgeon\",\r\n  \"OB-GYN (Obstetrician-Gynecologist)\",\r\n  \"Oncologist\",\r\n  \"Ophthalmologist\",\r\n  \"Optometrist\",\r\n  \"Oral Surgeon\",\r\n  \"Orthodontist\",\r\n  \"Orthopedic Surgeon (Orthopedist)\",\r\n  \"Pain Management Specialist\",\r\n  \"Pediatric Dentist\",\r\n  \"Pediatrician\",\r\n  \"Physiatrist (Physical Medicine)\",\r\n  \"Physical Therapist\",\r\n  \"Plastic Surgeon\",\r\n  \"Podiatrist (Foot and Ankle Specialist)\",\r\n  \"Primary Care Physician (PCP)\",\r\n  \"Prosthodontist\",\r\n  \"Psychiatrist\",\r\n  \"Psychologist\",\r\n  \"Pulmonologist (Lung Doctor)\",\r\n  \"Radiologist\",\r\n  \"Rheumatologist\",\r\n  \"Sleep Medicine Specialist\",\r\n  \"Sports Medicine Specialist\",\r\n  \"Surgeon\",\r\n  \"Therapist / Counselor\",\r\n  \"Urgent Care Specialist\",\r\n  \"Urological Surgeon\",\r\n  \"Urologist\",\r\n  \"Vascular Surgeon\",\r\n  \"Endodontist\",\r\n  \"Periodontist\",\r\n];\r\nexport { languages, specialitiesOptions };\r\n","import { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport AxiosBase from \"../../../config/AxiosBase\";\r\nimport Swal from \"sweetalert2\";\r\nimport history from \"../../../config/history\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport { languages, specialitiesOptions } from \"../../../containers/constants\";\r\n\r\nconst AddTeacher = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contactNo, setContactNo] = useState(\"\");\r\n  const [aboutMe, setAboutUs] = useState(\"\");\r\n  const [lang, setLang] = useState([]);\r\n  const [speciality, setSpeciality] = useState([]);\r\n  const [education, setEducation] = useState([]);\r\n  const [experince, setExperince] = useState(\"\");\r\n  const [practices, setPracticies] = useState([]);\r\n  const [hospital, setHospital] = useState([]);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [submit, setSubmit] = useState(false);\r\n  // loading\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    submit && validate();\r\n  }, [\r\n    name,\r\n    email,\r\n    contactNo,\r\n    aboutMe,\r\n    lang,\r\n    speciality,\r\n    education,\r\n    experince,\r\n    practices,\r\n    hospital,\r\n  ]);\r\n\r\n  //   multichip handlers\r\n\r\n  const handleAddEducation = (v) => {\r\n    setEducation([...education, v]);\r\n  };\r\n  const handleDeleteEducation = (v, index) => {\r\n    const filterArr = education.filter((el) => el !== v);\r\n    setEducation(filterArr);\r\n  };\r\n  const handleAddPractices = (v) => {\r\n    setPracticies([...practices, v]);\r\n  };\r\n  const handleDeletePractices = (v, index) => {\r\n    const filterArr = practices.filter((el) => el !== v);\r\n    setPracticies(filterArr);\r\n  };\r\n  const handleAddHospital = (v) => {\r\n    setHospital([...hospital, v]);\r\n  };\r\n  const handleDeleteHospital = (v, index) => {\r\n    const filterArr = hospital.filter((el) => el !== v);\r\n    setHospital(filterArr);\r\n  };\r\n\r\n  // validates the forms\r\n  const validate = () => {\r\n    let errors = {};\r\n\r\n    if (!name) errors.name = \"Name is required\";\r\n    if (!email) errors.email = \"Email is required\";\r\n    if (!contactNo) errors.contactNo = \"NPi number is required\";\r\n    if (!aboutMe) errors.aboutMe = \"About yourself is required\";\r\n    if (!experince) errors.experince = \"Experince is required\";\r\n    if (lang?.length === 0)\r\n      errors.lang = \"At least one language detail is required\";\r\n    if (speciality?.length === 0)\r\n      errors.speciality = \"At least one speciality detail is required\";\r\n    if (education?.length === 0)\r\n      errors.education = \"At least one education detail is required\";\r\n    if (practices?.length === 0)\r\n      errors.practices = \"At least one practices detail is required\";\r\n    if (hospital?.length === 0)\r\n      errors.hospital = \"At least one hosipital affilation detail is required\";\r\n\r\n    setErrors(errors);\r\n    const validity = Object.keys(errors).length > 0;\r\n    return validity;\r\n  };\r\n\r\n  // onsubmiting form\r\n\r\n  const onSubmit = async () => {\r\n    setSubmit(true);\r\n    const validity = validate();\r\n    if (validity) return;\r\n    const postData = {\r\n      name,\r\n      email,\r\n      contactNo,\r\n      aboutMe,\r\n      languages: lang,\r\n      speciality,\r\n      education,\r\n      experince,\r\n      practices,\r\n      hospital,\r\n    };\r\n    setLoading(true);\r\n    const token = localStorage.adminToken;\r\n    try {\r\n      await AxiosBase.post(\"/admin/new-doctor\", postData, {\r\n        headers: {\r\n          \"x-access-token\": token,\r\n        },\r\n      });\r\n      Swal.fire({\r\n        title: \"Your request received successfully!\",\r\n        icon: \"success\",\r\n      }).then((res) => {\r\n        history.push(\"/admin/dashboard\");\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: \"Opps , there are some errors\",\r\n        icon: \"error\",\r\n      });\r\n      const errorsMessage = error?.response?.data?.message;\r\n\r\n      if (errorsMessage) setErrors({ email: errorsMessage });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n            <CCard className=\"mx-4\">\r\n              <CCardBody className=\"p-4\">\r\n                <CForm>\r\n                  <h1>Add Doctor Account</h1>\r\n                  <p className=\"text-muted\">Create new account for Teacher</p>\r\n\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    style={{ height: 55 }}\r\n                    fullWidth\r\n                    label=\"Name\"\r\n                    variant={\"outlined\"}\r\n                    className=\"textInput\"\r\n                    value={name}\r\n                    name=\"name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    error={errors?.name && true}\r\n                    helperText={errors?.name}\r\n                  />\r\n\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    style={{ height: 55 }}\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    variant={\"outlined\"}\r\n                    className=\"textInput\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    error={errors?.email && true}\r\n                    helperText={errors?.email}\r\n                  />\r\n\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    style={{ height: 55 }}\r\n                    fullWidth\r\n                    label=\"NPI number\"\r\n                    name=\"number\"\r\n                    variant={\"outlined\"}\r\n                    className=\"textInput\"\r\n                    value={contactNo}\r\n                    onChange={(e) => setContactNo(e.target.value)}\r\n                    error={errors?.contactNo && true}\r\n                    helperText={errors?.contactNo}\r\n                  />\r\n\r\n                  <Autocomplete\r\n                    multiple\r\n                    id=\"tags-outlined\"\r\n                    options={languages}\r\n                    value={lang}\r\n                    getOptionLabel={(option) => option.name}\r\n                    filterSelectedOptions\r\n                    disableCloseOnSelect\r\n                    onChange={(e, v) => setLang(v)}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        error={errors?.lang && true}\r\n                        helperText={errors?.lang}\r\n                        className=\"textInput mt-2\"\r\n                        label=\"languages\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Languages\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    multiline\r\n                    label=\"About yourslef\"\r\n                    fullWidth\r\n                    rows={4}\r\n                    variant={\"outlined\"}\r\n                    value={aboutMe}\r\n                    className=\"textInput \"\r\n                    InputProps={{ style: { height: \"auto\" } }}\r\n                    onChange={(e) => setAboutUs(e.target.value)}\r\n                    error={errors?.aboutMe && true}\r\n                    helperText={errors?.aboutMe}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <h4 className=\"settitngLabel\">Education & background</h4>\r\n                  <br />\r\n                  <h6 className=\"settitngSubLabel\">Specialty & experience</h6>\r\n\r\n                  <Autocomplete\r\n                    id=\"tags-outlined\"\r\n                    options={specialitiesOptions}\r\n                    value={speciality}\r\n                    getOptionLabel={(option) => option}\r\n                    onChange={(e, v) => setSpeciality(v)}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        error={errors?.speciality && true}\r\n                        helperText={errors?.speciality}\r\n                        className=\"textInput mt-2\"\r\n                        label=\"Primary Speciality\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Primary Speciality\"\r\n                      />\r\n                    )}\r\n                  />\r\n\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    style={{ height: 60 }}\r\n                    fullWidth\r\n                    label=\"Experince (years)\"\r\n                    InputProps={{\r\n                      type: \"number\",\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">Year</InputAdornment>\r\n                      ),\r\n                    }}\r\n                    value={experince}\r\n                    variant={\"outlined\"}\r\n                    className=\"textInput\"\r\n                    onChange={(e) => setExperince(e.target.value)}\r\n                    error={errors?.experince && true}\r\n                    helperText={errors?.experince}\r\n                  />\r\n                  <h6 className=\"settitngSubLabel\">Education & training</h6>\r\n\r\n                  <ChipInput\r\n                    className=\"textInput\"\r\n                    placeholder=\"Add multiple Education Details\"\r\n                    fullWidth\r\n                    variant={\"outlined\"}\r\n                    value={education}\r\n                    onAdd={(chip) => handleAddEducation(chip)}\r\n                    onDelete={(chip, index) =>\r\n                      handleDeleteEducation(chip, index)\r\n                    }\r\n                    error={errors?.education && true}\r\n                    helperText={errors?.education}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <h6 className=\"settitngSubLabel\">Practice names</h6>\r\n                  <ChipInput\r\n                    className=\"textInput\"\r\n                    placeholder=\"Add multiple Practice names\"\r\n                    fullWidth\r\n                    variant={\"outlined\"}\r\n                    value={practices}\r\n                    onAdd={(chip) => handleAddPractices(chip)}\r\n                    onDelete={(chip, index) =>\r\n                      handleDeletePractices(chip, index)\r\n                    }\r\n                    error={errors?.practices && true}\r\n                    helperText={errors?.practices}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <h6 className=\"settitngSubLabel\">Hospital affiliations</h6>\r\n                  <ChipInput\r\n                    className=\"textInput\"\r\n                    placeholder=\"Add multiple Hospital affiliations\"\r\n                    fullWidth\r\n                    variant={\"outlined\"}\r\n                    value={hospital}\r\n                    onAdd={(chip) => handleAddHospital(chip)}\r\n                    onDelete={(chip, index) =>\r\n                      handleDeleteHospital(chip, index)\r\n                    }\r\n                    error={errors?.hospital && true}\r\n                    helperText={errors?.hospital}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n\r\n                  <CButton\r\n                    disabled={loading}\r\n                    className=\"mt-3\"\r\n                    onClick={onSubmit}\r\n                    color=\"success\"\r\n                    block\r\n                    type=\"button\"\r\n                  >\r\n                    Submit\r\n                  </CButton>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTeacher;\r\n"],"sourceRoot":""}